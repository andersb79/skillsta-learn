{"version":3,"sources":["components/Game.js","components/ProfileReadOnly.js","components/ItemList.js","components/Profile.js","components/Main.js","components/Login.js","models/Level.js","models/Item.js","models/User.js","models/LevelStore.js","App.js","serviceWorker.js","index.js"],"names":["ITEM_HEIGHT","useStyles","makeStyles","theme","card","marginTop","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Game","_ref","store","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","expanded","setExpanded","processFile","e","level","file","target","files","text","_React$useState3","_React$useState4","anchorEl","setAnchorEl","open","Boolean","handleClose","option","setLevelFilter","react_default","a","createElement","className","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","FilterList_default","levelFilter","Menu","id","keepMounted","onClose","PaperProps","style","maxHeight","width","levelFilters","map","MenuItem","key","selected","filteredLevels","i","visibility_sensor_default","publicId","onChange","isVisible","item","setVisibility","document","getElementById","play","pause","Card","CardHeader","Avatar","title","name","subheader","category","CardContent","lib","cloudName","loop","muted","playsInline","preload","poster","Typography","variant","color","component","details","Collapse","in","timeout","unmountOnExit","type","Button","VideoCall_default","observer","ArrowBackIos_default","selectProfile","selectedProfile","profileImage","_ref2","offset","top","refresh","onChangeRefresh","items","user","action","isDone","Star_default","game","date","components_ProfileReadOnly","onLogout","Fragment","loggedIn","uploadImage","Image_default","window","localStorage","removeItem","TabContainer","props","padding","children","root","flexGrow","tabIndex","setTabIndex","AppBar","position","Tabs","value","newValue","scrollButtons","indicatorColor","textColor","Tab","label","icon","Favorite_default","userName","SupervisedUserCircle_default","components_ItemList","List","users","ListItem","ListItemAvatar","ListItemText","primary","secondary","highscore","Divider","components_Profile","Login","onLogin","_useState","_useState2","setUserName","_useState3","_useState4","password","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","console","log","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","onInput","preventDefault","login","toLowerCase","alert","Level","types","model","integer","string","self","actions","setPublicId","newPublicId","setName","newName","views","status","is_done","levelStore","getRoot","some","x","resourceType","appendLeadingZeroes","n","Item","createdTime","Date","maybeNull","getFullYear","getMonth","getDate","find","levels","User","filter","length","nextChallange","setProfileImage","config","request","Request","method","body","fields","headers","Headers","Authorization","concat","Content-Type","itemsRequest","userRequest","array","test","initzialize","profile","_refresh","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","fetchItems","sent","reverse","forEach","elm","push","applySnapshot","abrupt","stop","apply","this","arguments","setHeight","logout","login2","add","addItem","fetchAirtable","_fetchAirtable","_callee2","resp","json","_context2","fetch","err","records","_fetchItems","_callee3","_context3","insertItem","updateUser","url","fetchUsers","_fetchUsers","_callee4","_context4","init","flow","_context5","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","onload","myObj","responseText","public_id","send","menuSelected","setMenuSelected","useEffect","innerHeight","components_Main","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b451e87c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport { Video } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nexport default function Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  function handleExpandClick() {\r\n    setExpanded(!expanded);\r\n  }\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, level, text => {\r\n      handleExpandClick();\r\n    });\r\n  }\r\n\r\n  function onChange(item, isVisible) {\r\n    item.setVisibility(isVisible);\r\n    if (isVisible) {\r\n      document.getElementById(item.publicId).play();\r\n    } else {\r\n      document.getElementById(item.publicId).pause();\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose(option) {\r\n    store.setLevelFilter(option);\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <IconButton\r\n        aria-label=\"More\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <FilterListIcon />{store.levelFilter.text}\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: 200\r\n          }\r\n        }}\r\n      >\r\n        {store.levelFilters.map(option => (\r\n          <MenuItem\r\n            key={option.id}\r\n            selected={option.id === store.levelFilter}\r\n            onClick={() => handleClose(option)}\r\n          >\r\n            {option.text}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n\r\n      {store.filteredLevels.map((level, i) => (\r\n        <VisibilitySensor\r\n          key={level.publicId}\r\n          onChange={isVisible => onChange(level, isVisible)}\r\n        >\r\n          <Card key={level.level} className={classes.card}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                  {level.level}\r\n                </Avatar>\r\n              }\r\n              title={level.name}\r\n              subheader={level.category}\r\n            />\r\n\r\n            <CardContent>\r\n              <Video\r\n                id={level.publicId}\r\n                cloudName=\"deolievif\"\r\n                publicId={level.publicId}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                loop\r\n                muted\r\n                playsInline\r\n                preload=\"none\"\r\n                poster={level.poster}\r\n              />\r\n              <div className=\"card-content\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {level.details}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n              <CardContent>\r\n                <div className=\"card-content2\">\r\n                  <div className=\"fileinputs\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"file\"\r\n                      onChange={e => processFile(e, level)}\r\n                    />\r\n                    <div className=\"fakefile\">\r\n                      <Button variant=\"outlined\">\r\n                        Ladda upp <VideoIcon />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Collapse>\r\n          </Card>\r\n        </VisibilitySensor>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image, Video } from \"cloudinary-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nfunction ProfileReadOnly({ store }) {\r\n  return (\r\n    <div>\r\n      <ArrowBackIosIcon onClick={() => store.selectProfile()} />{\" \"}\r\n      {store.selectedProfile.name}\r\n      <Image\r\n        cloudName=\"deolievif\"\r\n        publicId={store.selectedProfile.profileImage}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileReadOnly);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image, Video } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ProfileReadOnly from \"./ProfileReadOnly\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  if (isVisible) {\r\n    document.getElementById(item.publicId).play();\r\n  } else {\r\n    document.getElementById(item.publicId).pause();\r\n  }\r\n}\r\n\r\nfunction onChangeRefresh(store, isVisible) {\r\n  if(isVisible) {\r\n    store.refresh();\r\n  }\r\n}\r\n\r\nfunction handleRefresh(store) {\r\n  // do some async code here\r\n  const success = store.refresh();\r\n}\r\n\r\nfunction Items({store}) {\r\n  \r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-list\">\r\n        <VisibilitySensor offset={{top:80}} onChange={isVisible => onChangeRefresh(store, isVisible)}>\r\n          <div className=\"refresh-div\">dra för att ladda</div>\r\n        </VisibilitySensor>\r\n\r\n{!store.selectedProfile && store.items.map((item, i) => (\r\n          <VisibilitySensor\r\n            key={item.publicId}\r\n            onChange={isVisible => onChange(item, isVisible)}\r\n          >\r\n            <Card key={item.publicId} className={classes.card}>\r\n              <CardHeader \r\n                avatar={\r\n                  <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                    <Image\r\n                      cloudName=\"deolievif\"\r\n                      publicId={item.user.profileImage}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Avatar>\r\n                }\r\n                action={item.isDone && <StarIcon />}\r\n                title={<div onClick={() => store.selectProfile(item.user)}>{item.user.name}</div> }\r\n                subheader={item.game.name}\r\n              />\r\n              <CardContent>\r\n                <Video\r\n                  id={item.publicId}\r\n                  cloudName=\"deolievif\"\r\n                  publicId={item.publicId}\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  loop\r\n                  muted\r\n                  playsInline\r\n                  preload=\"none\"\r\n                  poster={item.poster}\r\n                />\r\n              </CardContent>\r\n              <CardContent>\r\n                <div className=\"item-date\">{item.date}</div>\r\n              </CardContent>\r\n            </Card>\r\n          </VisibilitySensor>\r\n        ))}\r\n        {store.selectedProfile && <ProfileReadOnly store={store}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image, Video } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction Profile({ store, onLogout }) {\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profile\">\r\n        {store.loggedIn.name}\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.loggedIn.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <div className=\"fileinputs\">\r\n          <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n          <div className=\"fakefile\">\r\n            <Button variant=\"outlined\">\r\n              Ladda upp <ImageIcon />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <Button variant=\"outlined\" onClick={logout}>\r\n          Logga ut\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(Profile);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport UserIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Profile from \"./Profile\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab label=\"Flöde\" icon={<FavoriteIcon />} />\r\n          <Tab label=\"Utmaningar\" icon={<StarIcon />} />\r\n          <Tab label=\"Topplista\" icon={<StarIcon />} />\r\n          <Tab label={store.loggedIn.userName} icon={<UserIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <ItemList store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Game store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <div className=\"profile\">Topplista</div>\r\n          <div className=\"highscore\">\r\n            <List className={classes.root}>\r\n              {store.users.map(user => (\r\n                <>\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <Image\r\n                          cloudName=\"deolievif\"\r\n                          publicId={user.profileImage}\r\n                          width=\"100%\"\r\n                          height=\"100%\"\r\n                        />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={user.name}\r\n                      secondary={user.highscore}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                </>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 3 && (\r\n        <TabContainer>\r\n         <Profile store={store} onLogout={onLogout} />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   console.log(window.localStorage.getItem(\"loggedIn\"));\r\n\r\n  //   if (!store.users.length) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (window.localStorage.getItem(\"loggedIn\")) {\r\n  //     if (store.login2(window.localStorage.getItem(\"loggedIn\"))) {\r\n  //       console.log(\"logged in\");\r\n  //       onLogin();\r\n  //     } else {\r\n  //       console.log(\":(\");\r\n  //     }\r\n  //   }\r\n  // });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Användarnamn{\" \"}\r\n        <input value={userName} onInput={e => setUserName(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        Lösenord{\" \"}\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onInput={e => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <Button variant=\"outlined\" onClick={e => onClick(e)}>\r\n        LOGIN\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    level: types.integer,\r\n    details: types.string,\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.string\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get status() {\r\n      return self.is_done ? \"Done\" : \"Not Done\";\r\n    },\r\n    get isDone() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.items.some(\r\n        x =>\r\n          x.user.id === levelStore.loggedIn.id &&\r\n          x.isDone &&\r\n          x.level === self.level\r\n      );\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    id: types.string,\r\n    createdTime: types.Date,\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer,\r\n    isDone: types.maybeNull(types.boolean)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get date() {\r\n      return (\r\n        self.createdTime.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getDate())\r\n      );\r\n    },\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    },\r\n    get game() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levels.find(x => x.level === self.level);\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string\r\n  })\r\n  .views(self => ({\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get highscore() {\r\n      return self.items.length === 0 ? 0 : self.items.length;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\n\r\nconst config = {\r\n  base: \"appC7N77wl4iVEXGD\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 20\r\n};\r\n\r\nconst insertLevel = new Request(\r\n  `https://api.airtable.com/v0/appC7N77wl4iVEXGD/Levels`,\r\n  {\r\n    method: \"post\",\r\n    body: JSON.stringify({\r\n      fields: {\r\n        level: 11,\r\n        name: \"Bell Taps\",\r\n        details:\r\n          \"Transfer ball from side to side in a “bell ringing” motion, using the inside of both feet\",\r\n        is_done: false,\r\n        publicId: \"xriaksiq3gipz0dupgny\",\r\n        category: \"Beginner\"\r\n      }\r\n    }),\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`,\r\n      \"Content-Type\": \"application/json\"\r\n    })\r\n  }\r\n);\r\n\r\nconst request = new Request(\r\n  `https://api.airtable.com/v0/${config.base}/${config.table}?maxRecords=${\r\n    config.maxRecords\r\n  }&view=${config.view}`,\r\n  {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`\r\n    })\r\n  }\r\n);\r\n\r\nconst itemsRequest = new Request(\r\n  `https://api.airtable.com/v0/${config.base}/Items?maxRecords=${\r\n    config.maxRecords\r\n  }&view=${config.view}`,\r\n  {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`\r\n    })\r\n  }\r\n);\r\n\r\nconst userRequest = new Request(\r\n  `https://api.airtable.com/v0/${config.base}/Users?maxRecords=${\r\n    config.maxRecords\r\n  }&view=${config.view}`,\r\n  {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`\r\n    })\r\n  }\r\n);\r\n\r\nconst levelFilters = [\r\n  { id: 0, text: 'Alla'},\r\n  { id: 1, text: 'Ej klarade'},\r\n  { id: 2, text: 'Klarade'}  \r\n];\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User)\r\n  })\r\n  .views(self => ({\r\n    get test() {\r\n      return \"testing\";\r\n    },\r\n    get filteredLevels() {\r\n      if(self.levelFilter.id === 0){\r\n        return self.levels;\r\n      }\r\n\r\n      if(self.levelFilter.id === 1){\r\n        return self.levels.filter(x => !x.isDone);\r\n      }\r\n\r\n       if(self.levelFilter.id === 2){\r\n         return self.levels.filter(x => x.isDone);\r\n       }\r\n\r\n      return [];\r\n    },\r\n    get levelFilters(){\r\n      return levelFilters;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false,\r\n    height: null,\r\n    selectedProfile: null,\r\n    levelFilter: self.levelFilters[0]\r\n  }))\r\n  .actions(self => ({\r\n    selectProfile(profile){\r\n      self.selectedProfile = profile; \r\n    },\r\n    setLevelFilter(filter){\r\n      self.levelFilter = filter; \r\n    },\r\n    async refresh(){\r\n      var items = await self.fetchItems();\r\n      \r\n      const data = [];      \r\n      \r\n      items.reverse();\r\n\r\n      items.forEach(elm => {\r\n        elm.fields.id = elm.id;        \r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.push(elm.fields);\r\n      });\r\n\r\n      applySnapshot(self.items, data);\r\n\r\n      return true;\r\n    },\r\n    setHeight(height) {\r\n      self.height = height;\r\n    },\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    async fetchAirtable() {\r\n      var resp = await fetch(request).catch(err => {\r\n        console.log(err);\r\n      });\r\n      if (resp.status >= 200 && resp.status < 300) {\r\n        var json = await resp.json();\r\n        return json.records;\r\n      }\r\n    },\r\n    async fetchItems() {\r\n      var resp = await fetch(itemsRequest).catch(err => {\r\n        console.log(err);\r\n      });\r\n      if (resp.status >= 200 && resp.status < 300) {\r\n        var json = await resp.json();\r\n        return json.records;\r\n      }\r\n    },\r\n    insertItem(item) {\r\n      fetch(\r\n        new Request(`https://api.airtable.com/v0/appC7N77wl4iVEXGD/Items`, {\r\n          method: \"post\",\r\n          body: JSON.stringify({\r\n            fields: item\r\n          }),\r\n          headers: new Headers({\r\n            Authorization: `Bearer ${config.apiKey}`,\r\n            \"Content-Type\": \"application/json\"\r\n          })\r\n        })\r\n      ).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    updateUser(user) {\r\n      const url = `https://api.airtable.com/v0/appC7N77wl4iVEXGD/Users/recPDEuzfAvPaJ5Jf`;\r\n      console.log(url);\r\n      fetch(\r\n        new Request(url, {\r\n          method: \"put\",\r\n          body: JSON.stringify({\r\n            fields: {\r\n              name: \"Gustav Karlsson\",\r\n              userName: \"gk\",\r\n              password: \"gk\",\r\n              profileImage: user.profileImage\r\n            }\r\n          }),\r\n          headers: new Headers({\r\n            Authorization: `Bearer ${config.apiKey}`,\r\n            \"Content-Type\": \"application/json\"\r\n          })\r\n        })\r\n      ).catch(err => {\r\n        alert(err);\r\n      });\r\n    },\r\n    async fetchUsers() {\r\n      var resp = await fetch(userRequest).catch(err => {\r\n        console.log(err);\r\n      });\r\n      if (resp.status >= 200 && resp.status < 300) {\r\n        var json = await resp.json();\r\n        return json.records;\r\n      }\r\n    },\r\n    init: flow(function* init(id) {\r\n      var levels = yield self.fetchAirtable();\r\n      var users = yield self.fetchUsers();\r\n      var items = yield self.fetchItems();\r\n\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: []\r\n      };\r\n\r\n      levels.forEach(elm => {\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.reverse();\r\n\r\n      items.forEach(elm => {\r\n        elm.fields.id = elm.id;        \r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, level, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"resource_type\", \"raw\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const item = {\r\n          userName: self.loggedIn.userName,\r\n          publicId: myObj.public_id,\r\n          level: level.level,\r\n          isDone: false\r\n        };\r\n\r\n        self.insertItem(item);\r\n\r\n        self.addItem(item);\r\n\r\n        console.log(self.items);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n  \r\n  useEffect(() => {\r\n    store.setHeight(window.innerHeight);\r\n  }, []);\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n\r\n\r\n  if (!store.initzialize) {\r\n    return <div>loading</div>;\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}