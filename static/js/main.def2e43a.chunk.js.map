{"version":3,"sources":["components/Number.js","components/Game.js","components/ItemList.js","components/Login.js","components/Main.js","models/Level.js","models/Item.js","models/User.js","models/LevelStore.js","App.js","serviceWorker.js","index.js"],"names":["Number","state","randomNumber","generateRandomNumber","min","max","random","Math","floor","_this","setState","setTimeout","this","bind","console","log","props","store","levels","visible","react_default","a","createElement","className","Component","observer","useStyles","makeStyles","theme","card","maxWidth","marginTop","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Game","_ref","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","expanded","setExpanded","processFile","e","level","file","target","files","text","loggedIn","nextChallange","Card","key","CardHeader","Avatar","aria-label","title","name","subheader","category","CardContent","lib","cloudName","publicId","width","controls","autoplay","loop","muted","playsinline","Typography","variant","color","component","details","Collapse","in","timeout","unmountOnExit","type","onChange","Button","VideoCall_default","items","map","item","i","user","profileImage","userName","Login","onLogin","onClick","login","TabContainer","style","padding","children","root","flexGrow","palette","background","paper","_useState","_useState2","menuSelected","setMenuSelected","tabIndex","setTabIndex","AppBar","position","Tabs","value","event","newValue","scrollButtons","indicatorColor","textColor","Tab","label","icon","Favorite_default","Star_default","SupervisedUserCircle_default","components_ItemList","List","users","Fragment","ListItem","ListItemAvatar","ListItemText","primary","secondary","highscore","Divider","uploadImage","Image_default","Level","types","model","integer","string","is_done","actions","self","markDone","setPublicId","newPublicId","setName","newName","views","status","Item","getRoot","find","x","User","id","password","levelStore","filter","length","setProfileImage","config","request","Request","method","body","JSON","stringify","fields","headers","Headers","Authorization","concat","Content-Type","itemsRequest","userRequest","LevelStore","array","test","filteredLevels","push","add","addItem","fetchAirtable","_fetchAirtable","asyncToGenerator","regenerator_default","mark","_callee","resp","json","wrap","_context","prev","next","fetch","err","sent","abrupt","records","stop","apply","arguments","fetchItems","_fetchItems","_callee2","_context2","insertItem","updateUser","url","alert","fetchUsers","_fetchUsers","_callee3","_context3","init","flow","saveRule","rule","data","_context4","forEach","elm","applySnapshot","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","open","onload","myObj","parse","responseText","public_id","send","App","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.def2e43a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass Number extends Component {\r\n  state = {\r\n    randomNumber: 0\r\n  };\r\n\r\n  generateRandomNumber = (min, max) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    this.setState({\r\n      randomNumber: random\r\n    });\r\n  };\r\n\r\n  render() {\r\n    setTimeout(this.generateRandomNumber.bind(this, 1, 10), 3000);\r\n\r\n    console.log(\"numbers\", this.props.store.levels);\r\n\r\n    if (this.props.visible) {\r\n       return <div className=\"number\">{this.state.randomNumber}</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        trams\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Number);\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport {\r\n  Image,\r\n  Video,\r\n  Transformation,\r\n  CloudinaryContext\r\n} from \"cloudinary-react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nexport default function Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  function handleExpandClick() {\r\n    setExpanded(!expanded);\r\n  }\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, level, text => {\r\n      handleExpandClick();\r\n    });\r\n  }\r\n\r\n  const level = store.loggedIn.nextChallange;\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {/* {store.loggedIn.nextChallange.map((level, i) => ( */}\r\n      <Card key={level.level} className={classes.card}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n              {level.level}\r\n            </Avatar>\r\n          }\r\n          title={level.name}\r\n          subheader={level.category}\r\n        />\r\n\r\n        <CardContent>\r\n          <Video\r\n            cloudName=\"deolievif\"\r\n            publicId={level.publicId}\r\n            width=\"100%\"\r\n            height=\"200px\"\r\n            controls\r\n            autoplay\r\n            loop\r\n            muted\r\n            playsinline\r\n          />\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {level.details}\r\n          </Typography>\r\n        </CardContent>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <div className=\"fileinputs\">\r\n              <input\r\n                type=\"file\"\r\n                className=\"file\"\r\n                onChange={e => processFile(e, level)}\r\n              />\r\n              <div className=\"fakefile\">\r\n                <Button variant=\"outlined\">\r\n                  Ladda upp <VideoIcon />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n      {/* ))} */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {\r\n  Image,\r\n  Video,\r\n  Transformation,\r\n  CloudinaryContext\r\n} from \"cloudinary-react\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"item-list\">\r\n      {store.items.map((item, i) => (\r\n        <Card key={item.publicId} className={classes.card}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                <Image\r\n                  cloudName=\"deolievif\"\r\n                  publicId={item.user.profileImage}\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                />\r\n              </Avatar>\r\n            }\r\n            title={item.userName}\r\n            subheader={item.level}\r\n          />\r\n          <CardContent>\r\n            <Video\r\n              cloudName=\"deolievif\"\r\n              publicId={item.publicId}\r\n              width=\"100%\"\r\n              height=\"200px\"\r\n              controls\r\n              autoplay\r\n              loop\r\n              muted\r\n              playsinline\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  function onChange() {\r\n    store.login(\"gk\");\r\n    onLogin(\"Game\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Användarnamn <input />\r\n      </div>\r\n      <div>\r\n        Lösenord <input type=\"password\" />\r\n      </div>\r\n      <Button variant=\"outlined\" onClick={onChange}>\r\n        LOGIN\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport ItemList from \"./ItemList\";\r\nimport Login from \"./Login\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport UserIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {\r\n  Image,\r\n  Video,\r\n  Transformation,\r\n  CloudinaryContext\r\n} from \"cloudinary-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Main({ store }) {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = React.useState(1);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : null;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab label=\"Flöde\" icon={<FavoriteIcon />} />\r\n          <Tab label=\"Utmaningar\" icon={<StarIcon />} />\r\n          <Tab label=\"Topplista\" icon={<StarIcon />} />\r\n          <Tab label={store.loggedIn.userName} icon={<UserIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <ItemList store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Game store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <div className=\"profile\">Topplista</div>\r\n          <div className=\"highscore\">\r\n            <List className={classes.root}>\r\n              {store.users.map(user => (\r\n                <>\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <Image\r\n                          cloudName=\"deolievif\"\r\n                          publicId={user.profileImage}\r\n                          width=\"100%\"\r\n                          height=\"100%\"\r\n                        />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={user.name} secondary={user.highscore} />\r\n                  </ListItem>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                </>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 3 && (\r\n        <TabContainer>\r\n          <div className=\"profile\">\r\n            {store.loggedIn.name}\r\n            <Image\r\n              cloudName=\"deolievif\"\r\n              publicId={store.loggedIn.profileImage}\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n            <div className=\"fileinputs\">\r\n              <input\r\n                type=\"file\"\r\n                className=\"file\"\r\n                onChange={e => processFile(e)}\r\n              />\r\n              <div className=\"fakefile\">\r\n                <Button variant=\"outlined\">\r\n                  Ladda upp <ImageIcon />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import { types } from \"mobx-state-tree\";\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    level: types.integer,\r\n    details: types.string,\r\n    is_done: false,\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.string\r\n  })\r\n  .actions(self => ({\r\n    markDone() {\r\n      self.is_done = true;\r\n    },\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    status() {\r\n      return self.is_done ? \"Done\" : \"Not Done\";\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Item = types.model(\"Item\", {\r\n  userName: types.string,\r\n  publicId: types.string,\r\n  level: types.integer\r\n}).views(self => ({\r\n  get user() {\r\n    const levelStore = getRoot(self);    \r\n    return levelStore.users.find(x => x.userName == self.userName);\r\n  }\r\n  \r\n}));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types.model(\"User\", {\r\n  id: types.string,\r\n  userName: types.string,\r\n  name: types.string,\r\n  password: types.string,\r\n  profileImage: types.string\r\n})\r\n.views(self => ({\r\n  get levelStore() {\r\n    const levelStore = getRoot(self);\r\n    return levelStore;   \r\n  },\r\n  get items() {\r\n    return self.levelStore.items.filter(x => x.userName === self.userName);\r\n  },\r\n  get highscore(){\r\n    return self.items.length === 0 ? 0 : self.items.length -1;\r\n  },\r\n  get nextChallange() {\r\n    return self.levelStore.levels[self.items.length];\r\n  }\r\n}))\r\n.actions(self => ({\r\n  setProfileImage(newPublicId) {\r\n    self.profileImage = newPublicId;\r\n  }  \r\n}));\r\nexport default User;\r\n","import { types, flow, applySnapshot, getEnv } from \"mobx-state-tree\";\r\nimport { toJS } from \"mobx\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\n\r\nconst config = {\r\n  base: \"appC7N77wl4iVEXGD\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 20\r\n};\r\n\r\nconst insertLevel = new Request(\r\n  `https://api.airtable.com/v0/appC7N77wl4iVEXGD/Levels`,\r\n  {\r\n    method: \"post\",\r\n    body: JSON.stringify({\r\n      fields: {\r\n        level: 11,\r\n        name: \"Bell Taps\",\r\n        details:\r\n          \"Transfer ball from side to side in a “bell ringing” motion, using the inside of both feet\",\r\n        is_done: false,\r\n        publicId: \"xriaksiq3gipz0dupgny\",\r\n        category: \"Beginner\"\r\n      }\r\n    }),\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`,\r\n      \"Content-Type\": \"application/json\"\r\n    })\r\n  }\r\n);\r\n\r\nconst request = new Request(\r\n  `https://api.airtable.com/v0/${config.base}/${config.table}?maxRecords=${\r\n    config.maxRecords\r\n  }&view=${config.view}`,\r\n  {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`\r\n    })\r\n  }\r\n);\r\n\r\nconst itemsRequest = new Request(\r\n  `https://api.airtable.com/v0/${config.base}/Items?maxRecords=${\r\n    config.maxRecords\r\n  }&view=${config.view}`,\r\n  {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`\r\n    })\r\n  }\r\n);\r\n\r\nconst userRequest = new Request(\r\n  `https://api.airtable.com/v0/${config.base}/Users?maxRecords=${\r\n    config.maxRecords\r\n  }&view=${config.view}`,\r\n  {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`\r\n    })\r\n  }\r\n);\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User)\r\n  })\r\n  .views(self => ({\r\n    get test() {\r\n      return \"testing\";\r\n    },\r\n    get filteredLevels() {\r\n      const array = [];\r\n      array.push(self.levels[0]);\r\n      return array;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null\r\n  }))\r\n  .actions(self => ({\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(x => x.userName === userName);\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    async fetchAirtable() {\r\n      var resp = await fetch(request).catch(err => {\r\n        console.log(err);\r\n      });\r\n      if (resp.status >= 200 && resp.status < 300) {\r\n        var json = await resp.json();\r\n        return json.records;\r\n      }\r\n    },\r\n    async fetchItems() {\r\n      var resp = await fetch(itemsRequest).catch(err => {\r\n        console.log(err);\r\n      });\r\n      if (resp.status >= 200 && resp.status < 300) {\r\n        var json = await resp.json();\r\n        return json.records;\r\n      }\r\n    },\r\n    insertItem(item) {\r\n      fetch(\r\n        new Request(`https://api.airtable.com/v0/appC7N77wl4iVEXGD/Items`, {\r\n          method: \"post\",\r\n          body: JSON.stringify({\r\n            fields: item\r\n          }),\r\n          headers: new Headers({\r\n            Authorization: `Bearer ${config.apiKey}`,\r\n            \"Content-Type\": \"application/json\"\r\n          })\r\n        })\r\n      ).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    updateUser(user) {\r\n      const url = `https://api.airtable.com/v0/appC7N77wl4iVEXGD/Users/recPDEuzfAvPaJ5Jf`;\r\n      console.log(url);\r\n      fetch(\r\n        new Request(url, {\r\n          method: \"put\",\r\n          body: JSON.stringify({\r\n            fields: {\r\n              name: \"Gustav Karlsson\",\r\n              userName: \"gk\",\r\n              password: \"gk\",\r\n              profileImage: user.profileImage\r\n            }\r\n          }),\r\n          headers: new Headers({\r\n            Authorization: `Bearer ${config.apiKey}`,\r\n            \"Content-Type\": \"application/json\"\r\n          })\r\n        })\r\n      ).catch(err => {\r\n        alert(err);\r\n      });\r\n    },\r\n    async fetchUsers() {\r\n      var resp = await fetch(userRequest).catch(err => {\r\n        console.log(err);\r\n      });\r\n      if (resp.status >= 200 && resp.status < 300) {\r\n        var json = await resp.json();\r\n        return json.records;\r\n      }\r\n    },\r\n    init: flow(function* saveRule(rule) {\r\n      var levels = yield self.fetchAirtable();\r\n      var users = yield self.fetchUsers();\r\n      var items = yield self.fetchItems();\r\n\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: []\r\n      };\r\n\r\n      levels.forEach(elm => {\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.forEach(elm => {\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      applySnapshot(self, data);\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, level, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"resource_type\", \"raw\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        //\"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        self.insertItem({\r\n          userName: self.loggedIn.userName,\r\n          publicId: myObj.public_id\r\n        });\r\n\r\n        self.addItem({\r\n          userName: self.loggedIn.userName,\r\n          level: level,\r\n          publicId: myObj.public_id\r\n        });\r\n\r\n        console.log(self.items);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Number from \"./components/Number\";\r\nimport Game from \"./components/Game\";\r\nimport Main from \"./components/Main\";\r\nimport ItemList from \"./components/ItemList\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport data from \"./models/data.json\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport UserIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init();\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}