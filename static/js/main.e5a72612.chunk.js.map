{"version":3,"sources":["components/VideoControl.js","components/Game.js","components/VideoList.js","components/Card.js","components/ProfileReadOnly.js","components/ItemListItem.js","components/ItemList.js","components/Profile.js","components/Badges.js","components/HighScore.js","components/HighScoreCards.js","components/Help.js","components/Number.js","components/Main.js","components/Login.js","models/Level.js","models/Item.js","models/User.js","models/Season.js","models/LevelStore.js","Api/SkillstaApi.js","App.js","serviceWorker.js","index.js"],"names":["observer","_ref","store","settings","goFullScreen","document","getElementById","id","webkitEnterFullscreen","hasSharedPath","react_default","a","createElement","onClick","loop","playsInline","preload","muted","width","height","poster","dropboxPoster","src","dropboxLink","type","lib","cloudName","publicId","ITEM_HEIGHT","useStyles","makeStyles","theme","card","marginTop","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","expanded","onChange","level","isVisible","setVisibility","videoElm","play","pause","console","log","useEffect","setTimeout","levels","filter","x","map","_React$useState3","_React$useState4","anchorEl","setAnchorEl","_React$useState5","_React$useState6","anchorChipEl","setAnchorChipEl","open","Boolean","handleClose","option","setLevelFilter","handleChipClose","season","switchSeason","getAvatarColor","category","backgroundColor","className","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","FilterList_default","levelFilter","text","Menu_Menu","keepMounted","onClose","PaperProps","style","maxHeight","levelFilters","MenuItem","key","selected","textAlign","Chip","variant","label","viewSeasonObject","seasonInfoText","clickable","chip","color","onDelete","deleteIcon","Button","object","Menu_default","seasonsWithoutView","friendlyName","filteredLevels","i","visibility_sensor_default","Card","CardHeader","Avatar","fontSize","attribute","title","name","subheader","displayText","CardContent","components_VideoControl","Typography","component","details","Collapse","in","timeout","unmountOnExit","isActiveSeason","e","file","target","files","processFile","alert","VideoCall_default","root","display","flexWrap","justifyContent","overflow","palette","background","paper","gridList","icon","user","GridList","cellHeight","GridListTile","cols","ListSubheader","videoList","length","tile","img","alt","GridListTileBar","subtitle","challange","xmlns","viewBox","fill","d","totalRating","position","firstName","THERating","DRIRating","PHYRating","BALRating","container","textField","spacing","marginRight","dense","menu","selectedProfile","userName","password","profileImage","favoriteTeam","playerTeam","shirtNumber","values","ArrowBackIos_default","selectProfile","noValidate","autoComplete","components_Card","TextField","disabled","value","margin","red","ItemStatusAction","_ref2","item","isDone","game","Star_default","isRejected","ThumbDown_default","AccountCircle_default","filteredItems","action","concat","hasComment","comment","CardActions","refresh","items","offset","top","onChangeRefresh","components_ItemListItem","components_ProfileReadOnly","onLogout","loggedIn","setValues","handleChange","objectSpread","defineProperty","uploadImage","Image_default","updateUser","window","localStorage","removeItem","badges","prices","badge","Security_default","count","flexGrow","Fragment","gutterBottom","List","highScoreList","ListItem","ListItemAvatar","ListItemText","primary","secondary","highscore","Divider","Paper","paragraph","ButtonGroup","Home_default","Person_default","Tablet_default","location","reload","Number","generateRandomNumber","min","max","Math","floor","random","generateColor","_this","props","colorCount","state","number","delay","tick","setState","this","interval","setInterval","prevProps","prevState","clearInterval","_this2","setRunningApp","Component","TabContainer","padding","children","_useState","_useState2","tabIndex","setTabIndex","appRunning","components_Number","AppBar","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","FormatListNumbered_default","Help_default","components_ItemList","components_Game","components_HighScoreCards","components_Profile","components_Help","Login","onLogin","setUserName","_useState3","_useState4","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","placeholder","preventDefault","login","toLowerCase","Categories","EASY","MEDIUM","HARD","Level","types","model","string","integer","sharedPath","maybeNull","fileType","posterPath","self","actions","setPublicId","newPublicId","setName","newName","views","categoryName","getRoot","currentSeason","levelStore","some","points","resourceType","appendLeadingZeroes","n","Item","createdTime","Date","status","isWaitingForApproval","date","getFullYear","getMonth","getDate","users","find","User","optional","split","round","thes","easy","medium","hard","badgeData","push","nextChallange","setProfileImage","Season","startDate","endDate","countDown","abs","getTime","isCurrentSeason","isViewedNow","viewSeason","startDateFriendly","endDateFriendly","LevelStore","array","seasons","currentSeasonObject","byHighscore","slice","sort","b","y","reverse","initzialize","api","setStartSeason","_switchSeason","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","arguments","setColorCount","app","profile","fetchAll","_fetchAll","_callee2","data","_context2","getUsers","sent","fetchSeasons","forEach","s","fields","check","fetchLevels","fetchItems","elm","abrupt","_refresh","_callee3","_context3","applySnapshot","setHeight","logout","login2","add","addItem","init","flow","_context4","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","onload","myObj","responseText","public_id","send","insertItem","config","base","table","view","apiKey","maxRecords","url","SkillstaApi","generalRequest","filterByFromula","conf","assign","includeFields","Request","method","headers","Headers","Authorization","response","_response","resp","json","fetch","err","records","_getUsers","body","lastFetch","toLocaleDateString","toLocaleTimeString","Content-Type","_fetchSeasons","_fetchLevels","_callee4","_args4","_fetchItems","_callee5","_args5","_context5","Api","menuSelected","setMenuSelected","innerHeight","components_Main","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5a72612.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Video } from \"cloudinary-react\";\r\n\r\nfunction VideoControl({ store, settings }) {\r\n  function goFullScreen(settings) {\r\n    document.getElementById(settings.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  if (settings.hasSharedPath) {\r\n    return (\r\n      <video\r\n        onClick={() => goFullScreen(settings)}\r\n        id={settings.id}\r\n        loop\r\n        playsInline\r\n        preload=\"none\"\r\n        muted\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        poster={settings.dropboxPoster}\r\n      >\r\n        <source src={settings.dropboxLink} type=\"video/mp4\" />\r\n      </video>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Video\r\n      onClick={() => goFullScreen(settings)}\r\n      id={settings.id}\r\n      cloudName=\"deolievif\"\r\n      publicId={settings.publicId}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      loop\r\n      muted\r\n      playsInline\r\n      preload=\"none\"\r\n      poster={settings.poster}\r\n    />\r\n  );\r\n}\r\n\r\nexport default observer(VideoControl);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.levels\r\n        .filter(x => x.isVisible)\r\n        .map(level => {\r\n          onChange(level, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, level, text => {\r\n      alert(\"Uppladdning klar\");\r\n    });\r\n  }\r\n\r\n  function onChange(level, isVisible) {\r\n    level.setVisibility(isVisible);\r\n    const videoElm = document.getElementById(level.id);\r\n    if (videoElm) {\r\n      if (isVisible) {\r\n        videoElm.play();\r\n      } else {\r\n        videoElm.pause();\r\n      }\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [anchorChipEl, setAnchorChipEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose(option) {\r\n    if (option.id || option.id === 0) {\r\n      store.setLevelFilter(option);\r\n    }\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function handleChipClick(event, object) {\r\n    setAnchorChipEl(event.currentTarget);\r\n  }\r\n\r\n  function handleChipClose(option) {\r\n    if (option.season || option.season === 0) {\r\n      store.switchSeason(option);\r\n    }\r\n    setAnchorChipEl(null);\r\n  }\r\n\r\n  function goFullScreen(level) {\r\n    document.getElementById(level.id).webkitEnterFullscreen();\r\n  }\r\n\r\n  function getAvatarColor(level) {\r\n    if (level.category === \"MEDIUM\") {\r\n      return { backgroundColor: \"orange\" };\r\n    }\r\n\r\n    if (level.category === \"HARD\") {\r\n      return { backgroundColor: \"red\" };\r\n    }\r\n\r\n    return { backgroundColor: \"green\" };\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <IconButton\r\n        aria-label=\"More\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <FilterListIcon />\r\n        {store.levelFilter.text}\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: 200\r\n          }\r\n        }}\r\n      >\r\n        {store.levelFilters.map(option => (\r\n          <MenuItem\r\n            key={option.id}\r\n            selected={option.id === store.levelFilter}\r\n            onClick={() => handleClose(option)}\r\n          >\r\n            {option.text}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Chip\r\n          variant=\"outlined\"\r\n          label={store.viewSeasonObject.seasonInfoText}\r\n          clickable\r\n          className={classes.chip}\r\n          color=\"primary\"\r\n          onDelete={() => {}}\r\n          deleteIcon={\r\n            <div>\r\n              <Button\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleChipClick}\r\n              >\r\n                <MenuIcon style={{ color: \"#3f51b5\" }} />\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorChipEl}\r\n                keepMounted\r\n                open={Boolean(anchorChipEl)}\r\n                onClose={handleChipClose}\r\n              >\r\n                {store.seasonsWithoutView.map(season => (\r\n                  <MenuItem\r\n                    key={season.season}\r\n                    onClick={() => handleChipClose(season)}\r\n                  >\r\n                    {season.friendlyName}\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n\r\n      {store.filteredLevels.map((level, i) => (\r\n        <VisibilitySensor\r\n          key={level.id}\r\n          onChange={isVisible => onChange(level, isVisible)}\r\n        >\r\n          <Card key={level.level} className={classes.card}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"Recipe\"\r\n                  style={getAvatarColor(level)}\r\n                  className={classes.avatar}\r\n                >\r\n                  <span style={{fontSize:'16px'}}>{level.attribute}</span>\r\n                </Avatar>\r\n              }\r\n              title={level.name}\r\n              subheader={level.displayText}\r\n            />\r\n\r\n            <CardContent>\r\n              <VideoControl store={store} settings={level} />\r\n              {/* <Video\r\n                onClick={() => goFullScreen(level)}\r\n                id={level.id}\r\n                cloudName=\"deolievif\"\r\n                publicId={level.publicId}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                loop\r\n                muted\r\n                playsInline\r\n                preload=\"none\"\r\n                poster={level.poster}\r\n              /> */}\r\n              <div className=\"card-content\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {level.details}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n              {level.isActiveSeason && (\r\n                <CardContent>\r\n                  <div className=\"card-content2\">\r\n                    <div className=\"fileinputs\">\r\n                      <input\r\n                        type=\"file\"\r\n                        className=\"file\"\r\n                        onChange={e => processFile(e, level)}\r\n                      />\r\n                      <div className=\"fakefile\">\r\n                        <Button variant=\"outlined\">\r\n                          Ladda upp <VideoIcon />\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              )}\r\n            </Collapse>\r\n          </Card>\r\n        </VisibilitySensor>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Game);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nfunction VideoList({ store, user }) {\r\n  const classes = useStyles();\r\n\r\n  function open() {}\r\n\r\n  return (\r\n    <GridList cellHeight={180} className={classes.gridList}>\r\n      <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n        <ListSubheader component=\"div\">\r\n          {user.videoList.length} uppladdade\r\n        </ListSubheader>\r\n      </GridListTile>\r\n      {user.videoList.map(tile => (\r\n        <GridListTile key={tile.id} onClick={() => open(tile)}>\r\n          <img src={tile.img} alt={tile.title} />\r\n          <GridListTileBar\r\n            title={tile.title}\r\n            subtitle={<span>{tile.challange}</span>}\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n}\r\n\r\nexport default observer(VideoList);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"../card.css\";\r\nimport { relative } from \"path\";\r\n\r\nfunction Card({ store, user }) {\r\n  \r\n\r\n  return (\r\n    <div className=\"cardWrapper\">\r\n      <div id=\"card\" className=\"active\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 267.3 427.3\">\r\n          <clipPath id=\"svgPath\">\r\n            <path\r\n              fill=\"#000\"\r\n              d=\"M265.3 53.9a33.3 33.3 0 0 1-17.8-5.5 32 32 0 0 1-13.7-22.9c-.2-1.1-.4-2.3-.4-3.4 0-1.3-1-1.5-1.8-1.9a163 163 0 0 0-31-11.6A257.3 257.3 0 0 0 133.7 0a254.9 254.9 0 0 0-67.1 8.7 170 170 0 0 0-31 11.6c-.8.4-1.8.6-1.8 1.9 0 1.1-.2 2.3-.4 3.4a32.4 32.4 0 0 1-13.7 22.9A33.8 33.8 0 0 1 2 53.9c-1.5.1-2.1.4-2 2v293.9c0 3.3 0 6.6.4 9.9a22 22 0 0 0 7.9 14.4c3.8 3.2 8.3 5.3 13 6.8 12.4 3.9 24.8 7.5 37.2 11.5a388.7 388.7 0 0 1 50 19.4 88.7 88.7 0 0 1 25 15.5v.1-.1c7.2-7 16.1-11.3 25-15.5a427 427 0 0 1 50-19.4l37.2-11.5c4.7-1.5 9.1-3.5 13-6.8 4.5-3.8 7.2-8.5 7.9-14.4.4-3.3.4-6.6.4-9.9V231.6 60.5v-4.6c.4-1.6-.3-1.9-1.7-2z\"\r\n            />\r\n          </clipPath>\r\n        </svg>\r\n        <div id=\"card-inner\">\r\n          <div id=\"card-top\">\r\n            <div className=\"info\">\r\n              <div className=\"value\">{user.totalRating}</div>\r\n              <div className=\"position\">{user.position}</div>\r\n              <div className=\"country\">\r\n                <div />\r\n              </div>\r\n              <div className=\"club\">\r\n                <div />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"image\" />\r\n            <div className=\"backfont\">SKILLSTA</div>\r\n          </div>\r\n          <div id=\"card-bottom\">\r\n            <div className=\"name\">{user.firstName}</div>\r\n            <div className=\"stats\">\r\n              <div>\r\n                <ul>\r\n                  <li>\r\n                    <span>{user.THERating}</span>\r\n                    <span>THE</span>\r\n                  </li>\r\n                  <li>\r\n                    <span>{user.DRIRating}</span>\r\n                    <span>DRI</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div>\r\n                <ul>\r\n                  <li>\r\n                    <span>{user.PHYRating}</span>\r\n                    <span>PHY</span>\r\n                  </li>\r\n                  <li>\r\n                    <span>{user.BALRating}</span>\r\n                    <span>BAL</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Card);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VideoList from \"./VideoList\";\r\nimport Card from \"./Card\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction ProfileReadOnly({ store }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.selectedProfile.id,\r\n    name: store.selectedProfile.name,\r\n    userName: store.selectedProfile.userName,\r\n    password: store.selectedProfile.password,\r\n    profileImage: store.selectedProfile.profileImage,\r\n    favoriteTeam: store.selectedProfile.favoriteTeam,\r\n    playerTeam: store.selectedProfile.playerTeam,\r\n    position: store.selectedProfile.position,\r\n    shirtNumber: store.selectedProfile.shirtNumber\r\n  });\r\n\r\n  return (\r\n    <div className=\"profileReadOnly\">\r\n      <div>\r\n        <div className=\"left\">\r\n          <ArrowBackIosIcon onClick={() => store.selectProfile()} />\r\n        </div>\r\n        <div className=\"right\">{store.selectedProfile.name}</div>\r\n      </div>\r\n\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <Card user={store.selectedProfile} />\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.selectedProfile.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"standard-name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          disabled\r\n          margin=\"normal\"\r\n        />\r\n        {/* <VideoList store={store} user={store.selectedProfile} /> */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ProfileReadOnly);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport VideoControl from \"./VideoControl\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    //maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction ItemListItem({ store }) {\r\n  const classes = useStyles();\r\n\r\n  function ItemStatusAction({ item }) {\r\n    if (item.isDone) {\r\n      const style = { color: \"green\" };\r\n      if (item.game.category === \"MEDIUM\") {\r\n        style.color = \"orange\";\r\n      }\r\n      if (item.game.category === \"HARD\") {\r\n        style.color = \"red\";\r\n      }\r\n\r\n      return <StarIcon style={style} />;\r\n    }\r\n    if (item.isRejected) {\r\n      return <ThumbDownIcon />;\r\n    }\r\n\r\n    return <AccountCircleIcon />;\r\n  }\r\n\r\n  if (store.filteredItems.length === 0) {\r\n    return (\r\n      <div className=\"banner\">\r\n        <div className=\"banner-text\">\r\n          <span>Du kan fortfarande bli först. Välj en utmaning</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return store.filteredItems.map((item, i) => (\r\n    <VisibilitySensor\r\n      key={item.publicId}\r\n      onChange={isVisible => onChange(item, isVisible)}\r\n    >\r\n      <Card key={item.publicId} className={classes.card}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n              <Image\r\n                cloudName=\"deolievif\"\r\n                publicId={item.user.profileImage}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n              />\r\n            </Avatar>\r\n          }\r\n          action={<ItemStatusAction item={item} />}\r\n          title={\r\n            <div onClick={() => store.selectProfile(item.user)}>\r\n              {item.user.name}\r\n            </div>\r\n          }\r\n          subheader={`${item.game.attribute} - ${item.game.name}`}\r\n        />\r\n        <CardContent>\r\n          <VideoControl store={store} settings={item} />\r\n          {item.hasComment && (\r\n            <div className=\"comments\">\r\n              <Typography\r\n                variant=\"overline\"\r\n                style={{ color: \"gray\", fontSize: \"10px\" }}\r\n              >\r\n                Från tränaren:\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">{item.comment}</Typography>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Typography\r\n            onClick={() => store.refresh()}\r\n            variant=\"overline\"\r\n            style={{ color: \"gray\" }}\r\n          >\r\n            {item.displayText}\r\n          </Typography>\r\n        </CardActions>\r\n      </Card>\r\n    </VisibilitySensor>\r\n  ));\r\n}\r\n\r\nexport default observer(ItemListItem);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport ProfileReadOnly from \"./ProfileReadOnly\";\r\nimport ItemListItem from \"./ItemListItem\";\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  const videoElm = document.getElementById(item.id);\r\n  if (videoElm) {\r\n    if (isVisible) {\r\n      videoElm.play();\r\n    } else {\r\n      videoElm.pause();\r\n    }\r\n  } else {\r\n    console.log(\"not found\");\r\n  }\r\n}\r\n\r\nfunction onChangeRefresh(store, isVisible) {\r\n  if (isVisible) {\r\n    store.refresh();\r\n    const a = store.items.length;\r\n    console.log(a);\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      store.items\r\n        .filter(x => x.isVisible)\r\n        .map(items => {\r\n          onChange(items, true);\r\n        });\r\n    }, 1);\r\n  });\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-list\">\r\n        <VisibilitySensor\r\n          offset={{ top: 80 }}\r\n          onChange={isVisible => onChangeRefresh(store, isVisible)}\r\n        >\r\n          <div className=\"refresh-div\">dra för att ladda</div>\r\n        </VisibilitySensor>\r\n\r\n        {!store.selectedProfile && <ItemListItem store={store} />}\r\n        {store.selectedProfile && <ProfileReadOnly store={store} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Card from \"./Card\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Profile({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    id: store.loggedIn.id,\r\n    name: store.loggedIn.name,\r\n    userName: store.loggedIn.userName,\r\n    password: store.loggedIn.password,\r\n    profileImage: store.loggedIn.profileImage,\r\n    favoriteTeam: store.loggedIn.favoriteTeam,\r\n    playerTeam: store.loggedIn.playerTeam,\r\n    position: store.loggedIn.position,\r\n    shirtNumber: store.loggedIn.shirtNumber\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  function save() {\r\n    store.updateUser(values);\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"fileinputs\">\r\n        <input type=\"file\" className=\"file\" onChange={e => processFile(e)} />\r\n        <div className=\"fakefile\">\r\n          <Button variant=\"outlined\">\r\n            <ImageIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      \r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Image\r\n          cloudName=\"deolievif\"\r\n          publicId={store.loggedIn.profileImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <div>\r\n        <Card user={store.loggedIn} />\r\n        </div>\r\n        <TextField\r\n          id=\"name\"\r\n          label=\"Namn\"\r\n          className={classes.textField}\r\n          value={values.name}\r\n          onChange={handleChange(\"name\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Lösenord\"\r\n          className={classes.textField}\r\n          value={values.password}\r\n          onChange={handleChange(\"password\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"favoriteTeam\"\r\n          label=\"Favoritlag\"\r\n          className={classes.textField}\r\n          value={values.favoriteTeam}\r\n          onChange={handleChange(\"favoriteTeam\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"playerTeam\"\r\n          label=\"Lag\"\r\n          className={classes.textField}\r\n          value={values.playerTeam}\r\n          onChange={handleChange(\"playerTeam\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"position\"\r\n          label=\"Position\"\r\n          className={classes.textField}\r\n          value={values.position}\r\n          onChange={handleChange(\"position\")}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"shirtNumber\"\r\n          label=\"Tröjnummer\"\r\n          className={classes.textField}\r\n          value={values.shirtNumber}\r\n          onChange={handleChange(\"shirtNumber\")}\r\n          margin=\"normal\"\r\n        />\r\n      </form>\r\n      <Button variant=\"outlined\" onClick={save}>\r\n        Spara\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={logout}>\r\n        Logga ut\r\n      </Button>\r\n      {/* <Button variant=\"outlined\" onClick={update}>\r\n           Uppdatera appen\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Profile);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport SecurityIcon from \"@material-ui/icons/Security\";\r\n\r\nfunction Badges({ store, user }) {\r\n  return (\r\n    <div>\r\n      {user.badges.map(category => (\r\n        <div>\r\n          {category.title}\r\n          {category.prices.map(badge => (\r\n            <div>\r\n              <SecurityIcon style={{ color: badge.color }} />\r\n              {badge.count} {badge.title}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Badges);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badges from \"./Badges\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScore({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA {store.viewSeasonObject.friendlyName}\r\n        </Typography>\r\n\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom>\r\n          max 200 poäng\r\n        </Typography>\r\n      </div>\r\n\r\n      {/* <Badges store={store} user={store.loggedIn} /> */}\r\n\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <div key={user.id}>\r\n              <ListItem key={user.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Image\r\n                      cloudName=\"deolievif\"\r\n                      publicId={user.profileImage}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={user.name}\r\n                  secondary={`Poäng: ${user.highscore}`}\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScore);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badges from \"./Badges\";\r\nimport Card from \"./Card\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction HighScoreCards({ store }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          TOPPLISTA {store.viewSeasonObject.friendlyName}\r\n        </Typography>\r\n\r\n        <Typography variant=\"overline\" style={{ color: \"gray\" }} gutterBottom>\r\n         \r\n        </Typography>\r\n      </div>\r\n\r\n      {/* <Badges store={store} user={store.loggedIn} /> */}\r\n\r\n      <div className=\"highscore\">\r\n        <List className={classes.root}>\r\n          {store.highScoreList.map(user => (\r\n            <Card key={user.id} user={user} />\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(HighScoreCards);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nfunction Help({ store }) {\r\n  function update() {\r\n    document.location.reload();\r\n  }\r\n\r\n  function startColor(count) {\r\n    store.setColorCount(count);\r\n    store.setRunningApp(\"COLOR\");\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"help\">\r\n      <Typography paragraph>\r\n        Här hittar du hjälp med hur appen fungerar.\r\n      </Typography>\r\n      <Typography paragraph>\r\n        Du kollar just nu på{\" \"}\r\n        <span style={{ color: \"red\" }}>\r\n          {store.viewSeasonObject.friendlyName}\r\n        </span>\r\n      </Typography>\r\n      <Typography paragraph>Visa annan säsong:</Typography>\r\n\r\n      <ButtonGroup color=\"primary\" aria-label=\"Outlined primary button group\">\r\n        {store.seasonsWithoutView.map(season => (\r\n          <Button\r\n            key={season.season}\r\n            onClick={() => store.switchSeason(season)}\r\n          >\r\n            {season.friendlyName}\r\n          </Button>\r\n        ))}\r\n      </ButtonGroup>\r\n      <Typography paragraph />\r\n      <Typography paragraph>\r\n        Varje säsong har 20 utmaningar. Man väljer vilken utmaning som helst,\r\n        man behöver inte göra dem i ordning. Utmaning filmar man sen i\r\n        horisontellt läge med kameran. När man är nöjd så klickar man på ladda\r\n        upp på den utmaningen man gjort. Filmen hamnar då för utvärdering, den\r\n        är då bara synlig för dig. Om den blir godkänd så kommer den synas för\r\n        övriga deltagare.\r\n      </Typography>\r\n\r\n      <Typography paragraph>\r\n        Tänk på att ni kan filma er själva genom att sätta upp kameran\r\n        någonstanns , sen sätter ni igång med utmaningen. När ni är klara\r\n        stänger ni av videon och klipper början och slutet som ni inte vill ha\r\n        med. Det kan ni enkelt göra i bilderappen. Sen går ni in och laddar upp\r\n        den på rätt utmaning. På så sätt behöver ni inte hjälp med att någon\r\n        filmar er.\r\n      </Typography>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <HomeIcon /> Hem\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Här visas flödet med alla säsongens användaruppladde filmer.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          <AccountCircleIcon />\r\n          Under utvärdering för att se om man klarat det.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          <StarIcon />\r\n          Klarad utmaning\r\n        </Typography>\r\n        <Typography paragraph>\r\n          <ThumbDownIcon />\r\n          Utmaning misslyckad. Bara att försöka igen. Kanske hade du inte flytet\r\n          i utmaningen, eller missförtått något. Kontrollera videon och\r\n          instruktionerna och försök igen.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Om du klickar på personens namn så kan du se profilen.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Klicka på videon för att se den i helskärm.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <StarIcon /> Utmaningar\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Här visas flödet med alla säsongens utmaningar. Det finns 3 olika\r\n          nivåer. Lätt, medium, svår.\r\n        </Typography>\r\n        <Typography paragraph>10 lätta övningar, 5 poäng var</Typography>\r\n        <Typography paragraph>5 medium övningar, 10 poäng var</Typography>\r\n        <Typography paragraph>5 svåra övningar, 20 poäng var</Typography>\r\n        <Typography paragraph>\r\n          <VideoIcon />\r\n          Klicka på denna för att ladda upp en film. Filma alltid i horisontellt\r\n          läge.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <StarIcon /> Topplistan\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Varje säsong består av maximalt 200 poäng. Här visas vem som fått\r\n          flest poäng.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <PersonIcon /> Profil\r\n      </Typography>\r\n\r\n      <div style={{ margin: \"10px\" }}>\r\n        <Typography paragraph>\r\n          Här kan du ladda upp din profilbild och andra användarinställningar.\r\n        </Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h6\" paragraph>\r\n        <TabletIcon /> Verktyg\r\n      </Typography>\r\n\r\n      {/* <Button variant=\"outlined\" onClick={() => store.setRunningApp(\"NUMBER\")}>\r\n        Nummer\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(2)}>\r\n        Color 2 färger\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={() => startColor(4)}>\r\n        Color 4 färger\r\n      </Button> */}\r\n\r\n      <Typography paragraph>\r\n        Om det finns nya uppdateringar kan du uppdatera här.\r\n      </Typography>\r\n\r\n      <Button variant=\"outlined\" onClick={update}>\r\n        Uppdatera appen\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default observer(Help);\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass Number extends Component {\r\n  generateRandomNumber = (min, max) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return random;\r\n  };\r\n  generateColor = () => {\r\n    const min = 1;\r\n    const max = this.props.colorCount * 10;\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    if (random < 10) {\r\n      return \"yellow\";\r\n    }\r\n\r\n    if (random < 20) {\r\n      return \"red\";\r\n    }\r\n\r\n    if (random < 30) {\r\n      return \"blue\";\r\n    }\r\n\r\n    if (random < 40) {\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  state = {\r\n    number: this.generateRandomNumber(0, 9),\r\n    color: this.generateColor(),\r\n    delay: 3000\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick, this.state.delay);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.delay !== this.state.delay) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.tick, this.state.delay);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      number: this.generateRandomNumber(0, 9),\r\n      color: this.generateColor()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const color = this.props.colorCount\r\n      ? { color: \"black\" }\r\n      : { color: \"yellow\" };\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.state.color }}\r\n        className=\"number\"\r\n        onClick={() => this.props.store.setRunningApp(\"MAIN\")}\r\n      >\r\n        <div className=\"inner-number\" style={color}>\r\n          {this.state.number}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Number);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Profile from \"./Profile\";\r\nimport HighScore from \"./HighScore\";\r\nimport HighScoreCards from \"./HighScoreCards\";\r\nimport Help from \"./Help\";\r\nimport Number from \"./Number\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(store.items.length === 0 ? 1 : 0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  if (store.appRunning === \"NUMBER\") {\r\n    return <Number store={store} />;\r\n  }\r\n\r\n  if (store.appRunning === \"COLOR\") {\r\n    return <Number store={store} colorCount={store.colorCount} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"off\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab icon={<HomeIcon />} />\r\n          <Tab icon={<StarIcon />} />\r\n          <Tab icon={<FormatListNumberedIcon />} />\r\n          <Tab icon={<PersonIcon />} />\r\n          <Tab icon={<HelpIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <ItemList store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Game store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          {/* <HighScore store={store} /> */}\r\n          <HighScoreCards store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 3 && (\r\n        <TabContainer>\r\n          <Profile store={store} onLogout={onLogout} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 4 && (\r\n        <TabContainer>\r\n          <Help store={store} />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img className=\"login-img\" src=\"skillsta.jpg\" alt=\"skillsta\" />\r\n      {/* <video\r\n        id=\"intro\"\r\n        autoPlay\r\n        loop\r\n        playsInline\r\n        preload=\"none\"\r\n        muted\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        poster=\"https://www.dropbox.com/s/xwpgpl1pz0xv42k/intro.jpg?raw=1\"\r\n      >\r\n        <source\r\n          src=\"https://www.dropbox.com/s/j6ev3gevrqj78wx/intro.mp4?raw=1\"\r\n          type=\"video/mp4\"\r\n        />\r\n      </video> */}\r\n      <div className=\"login-img-wrapper\">\r\n        <Typography paragraph variant=\"h3\">\r\n          skillsta\r\n        </Typography>\r\n        <div className=\"login-user-name\">\r\n          <input\r\n            placeholder=\"Användarnamn\"\r\n            className=\"login-input\"\r\n            value={userName}\r\n            onChange={e => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"login-password\">\r\n          <input\r\n            placeholder=\"Lösenord\"\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" onClick={e => onClick(e)}>\r\n          LOGIN\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Categories = {\r\n  EASY: \"Lätt\",\r\n  MEDIUM: \"Medium\",\r\n  HARD: \"Svår\"\r\n};\r\n\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    id: types.string,\r\n    level: types.integer,\r\n    details: types.string,\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.string,\r\n    season: types.integer,\r\n    sharedPath: types.maybeNull(types.string),\r\n    fileType: types.maybeNull(types.string),\r\n    posterPath: types.maybeNull(types.string),\r\n    attribute: types.maybeNull(types.string)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${self.publicId}.${\r\n        self.fileType\r\n      }?raw=1`;\r\n    },\r\n    get dropboxPoster() {\r\n      return `https://www.dropbox.com/s/${\r\n        self.posterPath\r\n      }/ConeDrill1.jpg?raw=1`;\r\n    },\r\n    get categoryName() {\r\n      return Categories[self.category];\r\n    },\r\n    get isActiveSeason() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.currentSeason === self.season;\r\n    },\r\n    get isDone() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.items.some(\r\n        x =>\r\n          x.user.id === levelStore.loggedIn.id &&\r\n          x.isDone &&\r\n          x.level === self.level\r\n      );\r\n    },\r\n    get points() {\r\n      if (self.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      return `${self.categoryName} - ${self.points} POÄNG`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    id: types.string,\r\n    createdTime: types.Date,\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer,\r\n    status: types.string,\r\n    sharedPath: types.maybeNull(types.string),\r\n    comment: types.maybeNull(types.string),\r\n    season: types.integer\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get hasComment() {\r\n      return self.comment ? true : false;\r\n    },\r\n    get hasSharedPath() {\r\n      return self.sharedPath ? true : false;\r\n    },\r\n    get dropboxLink() {\r\n      return `https://www.dropbox.com/s/${self.sharedPath}/${\r\n        self.publicId\r\n      }.mov?raw=1`;\r\n    },\r\n    get isDone() {\r\n      return self.status === \"DONE\";\r\n    },\r\n    get isRejected() {\r\n      return self.status === \"REJECTED\";\r\n    },\r\n    get isWaitingForApproval() {\r\n      return self.status === \"WAITINGFORAPPROVAL\";\r\n    },\r\n    get date() {\r\n      return (\r\n        self.createdTime.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.createdTime.getDate())\r\n      );\r\n    },\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    },\r\n    get game() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.levels.find(x => x.level === self.level);\r\n    },\r\n    get points() {\r\n      if (!self.isDone) {\r\n        return 0;\r\n      }\r\n\r\n      if (self.game.category === \"EASY\") {\r\n        return 5;\r\n      }\r\n\r\n      if (self.game.category === \"MEDIUM\") {\r\n        return 10;\r\n      }\r\n\r\n      if (self.game.category === \"HARD\") {\r\n        return 20;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    get displayText() {\r\n      if (self.isDone) {\r\n        return `${self.date} - ${self.game.categoryName} - ${\r\n          self.points\r\n        } POÄNG`;\r\n      }\r\n\r\n      return `${self.date}`;\r\n    },\r\n    get poster() {\r\n      return { publicId: self.publicId + \".jpg\", resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string,\r\n    favoriteTeam: types.optional(types.string, \"\"),\r\n    playerTeam: types.optional(types.string, \"\"),\r\n    position: types.optional(types.string, \"\"),\r\n    shirtNumber: types.optional(types.string, \"\")\r\n  })\r\n  .views(self => ({\r\n    get firstName() {\r\n      return self.name.split(' ')[0];\r\n    },\r\n    get totalRating(){\r\n      return Math.round((self.THERating + self.DRIRating + self.PHYRating + self.BALRating)/4);\r\n    },\r\n    get THERating() {\r\n      const thes = self.items.filter(x => x.game.attribute === \"THE\" && x.isDone);\r\n      const easy = thes.filter(x => x.game.category === \"EASY\");\r\n      const medium = thes.filter(x => x.game.category === \"MEDIUM\");\r\n      const hard = thes.filter(x => x.game.category === \"HARD\");\r\n\r\n      let count = 50;\r\n      \r\n      if(easy.length) {\r\n        count = count + (easy.length * 10);\r\n      }\r\n\r\n      if(medium.length) {\r\n        count = count + (medium.length * 10);\r\n      }\r\n\r\n      if(hard.length) {\r\n        count = count + (hard.length * 10);\r\n      }\r\n\r\n      return count;\r\n    },\r\n    get DRIRating() {\r\n      const thes = self.items.filter(x => x.game.attribute === \"DRI\" && x.isDone);\r\n      const easy = thes.filter(x => x.game.category === \"EASY\");\r\n      const medium = thes.filter(x => x.game.category === \"MEDIUM\");\r\n      const hard = thes.filter(x => x.game.category === \"HARD\");\r\n\r\n      let count = 50;\r\n      \r\n      if(easy.length) {\r\n        count = count + (easy.length * 10);\r\n      }\r\n\r\n      if(medium.length) {\r\n        count = count + (medium.length * 10);\r\n      }\r\n\r\n      if(hard.length) {\r\n        count = count + (hard.length * 10);\r\n      }\r\n\r\n      return count;\r\n    },\r\n    get PHYRating() {\r\n      const thes = self.items.filter(x => x.game.attribute === \"PHY\" && x.isDone);\r\n      const easy = thes.filter(x => x.game.category === \"EASY\");\r\n      const medium = thes.filter(x => x.game.category === \"MEDIUM\");\r\n      const hard = thes.filter(x => x.game.category === \"HARD\");\r\n\r\n      let count = 50;\r\n      \r\n      if(easy.length) {\r\n        count = count + (easy.length * 10);\r\n      }\r\n\r\n      if(medium.length) {\r\n        count = count + (medium.length * 10);\r\n      }\r\n\r\n      if(hard.length) {\r\n        count = count + (hard.length * 10);\r\n      }\r\n\r\n      return count;\r\n    },\r\n    get BALRating() {\r\n      const thes = self.items.filter(x => x.game.attribute === \"BAL\" && x.isDone);\r\n      const easy = thes.filter(x => x.game.category === \"EASY\");\r\n      const medium = thes.filter(x => x.game.category === \"MEDIUM\");\r\n      const hard = thes.filter(x => x.game.category === \"HARD\");\r\n\r\n      let count = 50;\r\n      \r\n      if(easy.length) {\r\n        count = count + (easy.length * 10);\r\n      }\r\n\r\n      if(medium.length) {\r\n        count = count + (medium.length * 10);\r\n      }\r\n\r\n      if(hard.length) {\r\n        count = count + (hard.length * 10);\r\n      }\r\n\r\n      return count;\r\n    },\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get badgeData() {\r\n      return self.levelStore.badges.filter(x => x.userName === self.userName);\r\n    },\r\n    get badges() {\r\n      const badges = [];\r\n\r\n      badges.push({\r\n        title: \"Säsongspriser\",\r\n        prices: [\r\n          { id: 0, title: \"Första pris\", color: \"red\", count: 2 },\r\n          { id: 1, title: \"Klarat alla nivå Lätt\", color: \"green\", count: 1 },\r\n          { id: 2, title: \"Klarat alla nivå Medel\", color: \"orange\", count: 2 },\r\n          { id: 3, title: \"Klarat alla nivå Svår\", color: \"red\", count: 2 }\r\n        ]\r\n      });\r\n\r\n      badges.push({\r\n        title: \"Träningspriser\",\r\n        prices: [\r\n          { id: 0, title: \"Första pris säsong 1\", color: \"red\" },\r\n          { id: 1, title: \"Klarat alla nivå Lätt\", color: \"green\" },\r\n          { id: 2, title: \"Klarat alla nivå Medel\", color: \"orange\" },\r\n          { id: 3, title: \"Klarat alla nivå Svår\", color: \"red\" }\r\n        ]\r\n      });\r\n\r\n      return badges;\r\n    },\r\n    get videoList() {\r\n      const userItems = self.items.filter(\r\n        x => x.isDone && x.userName === self.userName\r\n      );\r\n      return userItems.map(x => ({\r\n        id: x.id,\r\n        img: `http://res.cloudinary.com/deolievif/video/upload/${\r\n          x.publicId\r\n        }.jpg`,\r\n        title: x.name,\r\n        challange: x.game.name\r\n      }));\r\n    },\r\n    get highscore() {\r\n      if (self.items.length === 0) {\r\n        return 0;\r\n      }\r\n\r\n      const easy =\r\n        self.items.filter(x => x.isDone && x.game.category === \"EASY\").length *\r\n        5;\r\n      const medium =\r\n        self.items.filter(x => x.isDone && x.game.category === \"MEDIUM\")\r\n          .length * 10;\r\n      const hard =\r\n        self.items.filter(x => x.isDone && x.game.category === \"HARD\").length *\r\n        20;\r\n\r\n      return easy + medium + hard;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    },\r\n    updateUser({\r\n      name,\r\n      password,\r\n      profileImage,\r\n      favoriteTeam,\r\n      playerTeam,\r\n      position,\r\n      shirtNumber\r\n    }) {\r\n      self.name = name;\r\n      self.password = password;\r\n      self.profileImage = profileImage;\r\n      self.favoriteTeam = favoriteTeam;\r\n      self.playerTeam = playerTeam;\r\n      self.position = position;\r\n      self.shirtNumber = shirtNumber;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\nconst Season = types\r\n  .model(\"Season\", {\r\n    id: types.string,\r\n    season: types.integer,\r\n    startDate: types.Date,\r\n    endDate: types.Date,\r\n    friendlyName: types.string\r\n  })\r\n  .views(self => ({\r\n    get countDown() {\r\n      const oneDay = 24 * 60 * 60 * 1000;\r\n      return Math.round(\r\n        Math.abs((new Date().getTime() - self.endDate.getTime()) / oneDay)\r\n      );\r\n    },\r\n    get seasonInfoText() {\r\n      if (self.isCurrentSeason) {\r\n        return `${self.friendlyName} - ${self.countDown} dagar kvar`;\r\n      }\r\n\r\n      return `${self.friendlyName} - Ej aktiv`;\r\n    },\r\n    get isCurrentSeason() {\r\n      const store = getRoot(self);\r\n      return self.season === store.currentSeason;\r\n    },\r\n    get isViewedNow() {\r\n      const store = getRoot(self);\r\n      return self.season === store.viewSeason;\r\n    },\r\n    get startDateFriendly() {\r\n      return (\r\n        self.startDate.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.startDate.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.startDate.getDate())\r\n      );\r\n    },\r\n    get endDateFriendly() {\r\n      return (\r\n        self.endDate.getFullYear() +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.endDate.getMonth() + 1) +\r\n        \"-\" +\r\n        appendLeadingZeroes(self.endDate.getDate())\r\n      );\r\n    }\r\n  }));\r\n\r\nexport default Season;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\nimport Season from \"./Season\";\r\n\r\nconst levelFilters = [\r\n  { id: 0, text: \"Alla utmaningar\" },\r\n  { id: 1, text: \"Ej klarade utmaningar\" },\r\n  { id: 2, text: \"Klarade utmaningar\" }\r\n];\r\n\r\nconst appRunning = { MAIN: \"MAIN\", NUMBER: \"NUMBER\", COLOR: \"COLOR\" };\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User),\r\n    seasons: types.array(Season),\r\n    badges: types.array(Item)\r\n  })\r\n  .views(self => ({\r\n    get viewSeasonObject() {\r\n      return self.seasons.find(x => x.season === self.viewSeason);\r\n    },\r\n    get seasonsWithoutView() {\r\n      return self.seasons.filter(x => x.season !== self.viewSeason);\r\n    },\r\n    get currentSeasonObject() {\r\n      return self.seasons.find(x => x.season === self.currentSeason);\r\n    },\r\n    get filteredItems() {\r\n      return self.items.filter(\r\n        x => x.isDone || x.userName === self.loggedIn.userName\r\n      );\r\n    },\r\n    get highScoreList() {\r\n      //   return self.users.sort(x => x.highscore);\r\n      var byHighscore = self.users.slice(0);\r\n      byHighscore.sort((a, b) => {\r\n        var x = a.highscore;\r\n        var y = b.highscore;\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n      return byHighscore.reverse();\r\n    },\r\n    get filteredLevels() {\r\n      if (self.levelFilter.id === 0) {\r\n        return self.levels.filter(x => x.season === self.viewSeason);\r\n      }\r\n\r\n      if (self.levelFilter.id === 1) {\r\n        return self.levels.filter(\r\n          x => !x.isDone && x.season === self.viewSeason\r\n        );\r\n      }\r\n\r\n      if (self.levelFilter.id === 2) {\r\n        return self.levels.filter(\r\n          x => x.isDone && x.season === self.viewSeason\r\n        );\r\n      }\r\n\r\n      return [];\r\n    },\r\n    get levelFilters() {\r\n      return levelFilters;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false,\r\n    height: null,\r\n    selectedProfile: null,\r\n    levelFilter: self.levelFilters[0],\r\n    api: null,\r\n    appRunning: appRunning.MAIN,\r\n    colorCount: 2,\r\n    currentSeason: null,\r\n    viewSeason: null\r\n  }))\r\n  .actions(self => ({\r\n    setStartSeason(season) {\r\n      self.viewSeason = season;\r\n      self.currentSeason = season;\r\n    },\r\n    async switchSeason(season) {\r\n      self.viewSeason = season.season;\r\n      await self.refresh();\r\n    },\r\n    setColorCount(count) {\r\n      self.colorCount = count;\r\n    },\r\n    setRunningApp(app) {\r\n      self.appRunning = app;\r\n    },\r\n    selectProfile(profile) {\r\n      self.selectedProfile = profile;\r\n    },\r\n    setLevelFilter(filter) {\r\n      self.levelFilter = filter;\r\n    },\r\n    async fetchAll() {\r\n      var users = await self.api.getUsers();\r\n      var seasons = await self.api.fetchSeasons();\r\n\r\n      if (self.currentSeason === null) {\r\n        seasons.forEach(s => {\r\n          var startDate = new Date(s.fields.startDate);\r\n          var endDate = new Date(s.fields.endDate);\r\n          var check = new Date();\r\n\r\n          if (check > startDate && check < endDate) {\r\n            self.setStartSeason(s.fields.season);\r\n          }\r\n        });\r\n      }\r\n\r\n      var levels = await self.api.fetchLevels(self.viewSeason);\r\n      var items = await self.api.fetchItems(self.viewSeason);\r\n\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: [],\r\n        seasons: [],\r\n        badges: []\r\n      };\r\n\r\n      seasons.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.startDate = new Date(elm.fields.startDate);\r\n        elm.fields.endDate = new Date(elm.fields.endDate);\r\n        data.seasons.push(elm.fields);\r\n      });\r\n\r\n      levels.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        elm.fields.createdTime = new Date(elm.createdTime);\r\n        data.badges.push(elm.fields);\r\n      });\r\n\r\n      items.reverse();\r\n\r\n      items\r\n        .filter(x => x.fields.season === self.viewSeason)\r\n        .forEach(elm => {\r\n          elm.fields.id = elm.id;\r\n          elm.fields.createdTime = new Date(elm.createdTime);\r\n          data.items.push(elm.fields);\r\n        });\r\n\r\n      return data;\r\n    },\r\n    async refresh() {\r\n      const data = await self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      return true;\r\n    },\r\n    setHeight(height) {\r\n      self.height = height;\r\n    },\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    updateUser(user) {\r\n      self.api.updateUser(user);\r\n    },\r\n    init: flow(function* init(api, id) {\r\n      self.api = api;\r\n      const data = yield self.fetchAll();\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      if (self.loggedIn) {\r\n        self.updateUser(self.loggedIn);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, level, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"resource_type\", \"raw\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const item = {\r\n          userName: self.loggedIn.userName,\r\n          publicId: myObj.public_id,\r\n          level: level.level,\r\n          status: \"WAITINGFORAPPROVAL\",\r\n          season: self.currentSeason\r\n        };\r\n\r\n        self.api.insertItem(item);\r\n\r\n        self.refresh();\r\n        //self.addItem(item);\r\n\r\n        console.log(self.items);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","const config = {\r\n  base: \"appC7N77wl4iVEXGD\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 1000,\r\n  url: \"https://api.airtable.com/v0/appC7N77wl4iVEXGD\"\r\n};\r\n\r\nexport default {\r\n  generalRequest({ maxRecords, table, view, filterByFromula, fields }) {\r\n    const conf = Object.assign({}, config);\r\n    if (maxRecords) {\r\n      conf.maxRecords = maxRecords;\r\n    }\r\n    if (view) {\r\n      conf.view = view;\r\n    }\r\n    if (table) {\r\n      conf.table = table;\r\n    }\r\n\r\n    let includeFields = \"\";\r\n    if (fields) {\r\n      includeFields = `${fields}&`;\r\n    }\r\n\r\n    if (!filterByFromula) {\r\n      filterByFromula = \"\";\r\n    }\r\n\r\n    const url = `${config.url}/${conf.table}?${includeFields}maxRecords=${\r\n      conf.maxRecords\r\n    }&view=${conf.view}${filterByFromula}`;\r\n\r\n    return new Request(url, {\r\n      method: \"get\",\r\n      headers: new Headers({\r\n        Authorization: `Bearer ${conf.apiKey}`\r\n      })\r\n    });\r\n  },\r\n  async response(conf) {\r\n    var resp = await fetch(this.generalRequest(conf)).catch(err => {\r\n      console.log(err);\r\n    });\r\n    if (resp.status >= 200 && resp.status < 300) {\r\n      var json = await resp.json();\r\n      return json.records;\r\n    }\r\n  },\r\n  async getUsers() {\r\n    return this.response({ table: \"Users\" });\r\n  },\r\n  updateUser(user) {\r\n    const url = `${config.url}/Users/${user.id}`;\r\n\r\n    fetch(\r\n      new Request(url, {\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n          fields: {\r\n            name: user.name,\r\n            userName: user.userName,\r\n            password: user.password,\r\n            profileImage: user.profileImage,\r\n            favoriteTeam: user.favoriteTeam,\r\n            playerTeam: user.playerTeam,\r\n            position: user.position,\r\n            shirtNumber: user.shirtNumber,\r\n            lastFetch: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`\r\n          }\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      alert(err);\r\n    });\r\n  },\r\n  async fetchSeasons() {\r\n    return this.response({\r\n      table: \"Seasons\"\r\n    });\r\n  },\r\n  async fetchLevels(season = 0) {\r\n    return this.response({\r\n      table: \"Levels\",\r\n      filterByFromula: `&filterByFormula=season%3D${season}`\r\n    });\r\n  },\r\n  async fetchItems(season = 0) {\r\n    return this.response({\r\n      table: \"Items\",\r\n      filterByFromula: `&filterByFormula=season%3D${season}`\r\n    });\r\n  },\r\n  insertItem(item) {\r\n    fetch(\r\n      new Request(`${config.url}/Items`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          fields: item\r\n        }),\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${config.apiKey}`,\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      })\r\n    ).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Api from \"./Api/SkillstaApi\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(Api, window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  useEffect(() => {\r\n    store.setHeight(window.innerHeight);\r\n  }, []);\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return (\r\n      <div style={{ marginTop: \"100px\", textAlign: \"center\" }}>LADDAR...</div>\r\n    );\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}