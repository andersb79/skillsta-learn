{"version":3,"sources":["components/Game.js","components/ItemList.js","components/Main.js","components/Login.js","models/Level.js","models/Item.js","models/User.js","models/LevelStore.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","card","maxWidth","marginTop","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Game","_ref","store","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","expanded","setExpanded","processFile","e","level","file","target","files","text","loggedIn","nextChallange","react_default","a","createElement","className","Card","key","CardHeader","Avatar","aria-label","title","name","subheader","category","CardContent","lib","id","cloudName","publicId","width","autoPlay","loop","muted","playsInline","Typography","variant","color","component","details","Collapse","in","timeout","unmountOnExit","type","onChange","Button","VideoCall_default","observer","items","map","item","i","visibility_sensor_default","isVisible","setVisibility","document","getElementById","play","pause","user","profileImage","TabContainer","props","style","padding","children","root","flexGrow","palette","background","paper","onLogout","tabIndex","setTabIndex","AppBar","position","Tabs","value","event","newValue","scrollButtons","indicatorColor","textColor","Tab","label","icon","Favorite_default","Star_default","userName","SupervisedUserCircle_default","components_ItemList","List","users","Fragment","ListItem","ListItemAvatar","ListItemText","primary","secondary","highscore","Divider","uploadImage","Image_default","onClick","window","localStorage","removeItem","Login","onLogin","_useState","_useState2","setUserName","_useState3","_useState4","password","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","console","log","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","onInput","preventDefault","login","toLowerCase","alert","Level","types","model","integer","string","is_done","actions","self","markDone","setPublicId","newPublicId","setName","newName","views","status","Item","getRoot","find","x","User","levelStore","filter","length","levels","setProfileImage","config","request","Request","method","body","fields","headers","Headers","Authorization","concat","Content-Type","itemsRequest","userRequest","array","test","filteredLevels","push","initzialize","logout","login2","add","addItem","fetchAirtable","_fetchAirtable","asyncToGenerator","regenerator_default","mark","_callee","resp","json","wrap","_context","prev","next","fetch","err","sent","abrupt","records","stop","apply","this","arguments","fetchItems","_fetchItems","_callee2","_context2","insertItem","updateUser","url","fetchUsers","_fetchUsers","_callee3","_context3","init","flow","data","_context4","forEach","elm","applySnapshot","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","open","onload","myObj","responseText","public_id","send","menuSelected","setMenuSelected","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kWA2BMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,IACVC,UAAW,QAEbC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYV,EAAMW,YAAYC,OAAO,YAAa,CAChDC,SAAUb,EAAMW,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,SAIV,SAASC,EAATC,GAAyB,IAATC,EAASD,EAATC,MACvBC,EAAUxB,IADsByB,EAENC,IAAMC,UAAS,GAFTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE/BM,EAF+BH,EAAA,GAErBI,EAFqBJ,EAAA,GAQtC,SAASK,EAAYC,EAAGC,GACtB,IAAIC,EAAOF,EAAEG,OAAOC,MAAM,GAE1Bf,EAAMU,YAAYG,EAAMD,EAAO,SAAAI,GAN/BP,GAAaD,KAWf,IAAMI,EAAQZ,EAAMiB,SAASC,cAE7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,IAAKZ,EAAMA,MAAOU,UAAWrB,EAAQrB,MACzCuC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACE9B,OACEwB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQC,aAAW,SAASL,UAAWrB,EAAQN,QAC5CiB,EAAMA,OAGXgB,MAAOhB,EAAMiB,KACbC,UAAWlB,EAAMmB,WAGnBZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,MAAD,CACEC,GAAG,UACHC,UAAU,YACVC,SAAUxB,EAAMwB,SAChBC,MAAM,OACNrD,OAAO,QACPsD,UAAQ,EACRC,MAAI,EACJC,OAAK,EACLC,aAAW,IAEbtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KACzDjC,EAAMkC,UAGX3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAUC,GAAIxC,EAAUyC,QAAQ,OAAOC,eAAa,GAClD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACE8B,KAAK,OACL7B,UAAU,OACV8B,SAAU,SAAAzC,GAAC,OAAID,EAAYC,EAAGC,MAEhCO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAQV,QAAQ,YAAhB,aACYxB,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,4CClGtB3C,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,IACVC,UAAW,QAEbC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYV,EAAMW,YAAYC,OAAO,YAAa,CAChDC,SAAUb,EAAMW,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,SAyDV0D,kBA5Cf,SAAAxD,GAA6B,IAATC,EAASD,EAATC,MACZC,EAAUxB,IAEhB,OACE0C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZtB,EAAMwD,MAAMC,IAAI,SAACC,EAAMC,GAAP,OACfxC,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CACEI,IAAKkC,EAAKtB,SACVgB,SAAU,SAAAS,GAAS,OAjB7B,SAAkBH,EAAMG,GACtBH,EAAKI,cAAcD,GACfA,EACFE,SAASC,eAAeN,EAAKtB,UAAU6B,OAEvCF,SAASC,eAAeN,EAAKtB,UAAU8B,QAYVd,CAASM,EAAMG,KAEtC1C,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,IAAKkC,EAAKtB,SAAUd,UAAWrB,EAAQrB,MAC3CuC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACE9B,OACEwB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQC,aAAW,SAASL,UAAWrB,EAAQN,QAC7CwB,EAAAC,EAAAC,cAACY,EAAA,MAAD,CACEE,UAAU,YACVC,SAAUsB,EAAKS,KAAKC,aACpB/B,MAAM,OACNrD,OAAO,UAIb4C,MAAO8B,EAAKS,KAAKtC,KACjBC,UAAW4B,EAAK9C,QAElBO,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,MAAD,CACEC,GAAIwB,EAAKtB,SACTD,UAAU,YACVC,SAAUsB,EAAKtB,SACfC,MAAM,OACNrD,OAAO,OACPuD,MAAI,EACJC,OAAK,EACLC,aAAW,kKCvD3B,SAAS4B,EAAaC,GACpB,OACEnD,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAYG,UAAU,MAAM0B,MAAO,CAAEC,QAAS,KAC3CF,EAAMG,UASb,IAAMhG,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC+F,KAAM,CACJC,SAAU,EACVtC,MAAO,OACPzC,gBAAiBjB,EAAMiG,QAAQC,WAAWC,UAmH/BvB,kBA/Gf,SAAAxD,GAAmC,IAAnBC,EAAmBD,EAAnBC,MAAO+E,EAAYhF,EAAZgF,SACf9E,EAAUxB,IADiByB,EAEDC,IAAMC,SAAS,GAFdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE1B8E,EAF0B3E,EAAA,GAEhB4E,EAFgB5E,EAAA,GAmBjC,OACEc,EAAAC,EAAAC,cAAA,OAAKC,UAAWrB,EAAQyE,MACtBvD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAQC,SAAS,QAAQvC,MAAM,WAC7BzB,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CACEC,MAAOL,EACP5B,SApBR,SAAsBkC,EAAOC,GAC3BN,EAAYM,IAoBN5C,QAAQ,aACR6C,cAAc,KACdC,eAAe,UACfC,UAAU,WAEVvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAKC,MAAM,WAAQC,KAAM1E,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,QACzBD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAKC,MAAM,aAAaC,KAAM1E,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,QAC9BD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAKC,MAAM,YAAYC,KAAM1E,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,QAC7BD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAKC,MAAO5F,EAAMiB,SAAS+E,SAAUH,KAAM1E,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,UAGjC,IAAb4D,GACC7D,EAAAC,EAAAC,cAACgD,EAAD,KACElD,EAAAC,EAAAC,cAAC6E,EAAD,CAAUlG,MAAOA,KAGP,IAAbgF,GACC7D,EAAAC,EAAAC,cAACgD,EAAD,KACElD,EAAAC,EAAAC,cAACvB,EAAD,CAAME,MAAOA,KAGH,IAAbgF,GACC7D,EAAAC,EAAAC,cAACgD,EAAD,KACElD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAM7E,UAAWrB,EAAQyE,MACtB1E,EAAMoG,MAAM3C,IAAI,SAAAU,GAAI,OACnBhD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiF,SAAA,KACElF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,KACEnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACY,EAAA,MAAD,CACEE,UAAU,YACVC,SAAU+B,EAAKC,aACf/B,MAAM,OACNrD,OAAO,WAIbmC,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACEC,QAAStC,EAAKtC,KACd6E,UAAWvC,EAAKwC,aAGpBxF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAASjE,QAAQ,QAAQE,UAAU,aAOjC,IAAbmC,GACC7D,EAAAC,EAAAC,cAACgD,EAAD,KACElD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZtB,EAAMiB,SAASY,KAChBV,EAAAC,EAAAC,cAACY,EAAA,MAAD,CACEE,UAAU,YACVC,SAAUpC,EAAMiB,SAASmD,aACzB/B,MAAM,OACNrD,OAAO,SAETmC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACE8B,KAAK,OACL7B,UAAU,OACV8B,SAAU,SAAAzC,GAAC,OAlFzB,SAAqBA,EAAGC,GACtB,IAAIC,EAAOF,EAAEG,OAAOC,MAAM,GAE1Bf,EAAM6G,YAAYhG,EAAM,SAAAG,MA+EGN,CAAYC,MAE7BQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAQV,QAAQ,YAAhB,aACYxB,EAAAC,EAAAC,cAACyF,EAAA1F,EAAD,UAKlBD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAQV,QAAQ,WAAWoE,QAvFrC,WACEC,OAAOC,aAAaC,WAAW,YAC/BnC,MAqFQ,iBC7IG,SAASoC,EAATpH,GAAmC,IAAlBC,EAAkBD,EAAlBC,MAAOoH,EAAWrH,EAAXqH,QAAWC,EAChBjH,mBAAS,IADOkH,EAAAhH,OAAAC,EAAA,EAAAD,CAAA+G,EAAA,GACzCrB,EADyCsB,EAAA,GAC/BC,EAD+BD,EAAA,GAAAE,EAEhBpH,mBAAS,IAFOqH,EAAAnH,OAAAC,EAAA,EAAAD,CAAAkH,EAAA,GAEzCE,EAFyCD,EAAA,GAE/BE,EAF+BF,EAAA,GAAAG,EAwBhD,SAAyBpG,EAAKqG,GAAc,IAAAC,EAGJ1H,mBAAS,WAC7C,IAEE,IAAMsD,EAAOsD,OAAOC,aAAac,QAAQvG,GAEzC,OAAOkC,EAAOsE,KAAKC,MAAMvE,GAAQmE,EACjC,MAAOK,GAGP,OADAC,QAAQC,IAAIF,GACLL,KAZ+BQ,EAAA/H,OAAAC,EAAA,EAAAD,CAAAwH,EAAA,GAGnCQ,EAHmCD,EAAA,GAGtBE,EAHsBF,EAAA,GAiC1C,MAAO,CAACC,EAfS,SAAAjD,GACf,IAEE,IAAMmD,EACJnD,aAAiBoD,SAAWpD,EAAMiD,GAAejD,EAEnDkD,EAAeC,GAEfxB,OAAOC,aAAayB,QAAQlH,EAAKwG,KAAKW,UAAUH,IAChD,MAAON,GAEPC,QAAQC,IAAIF,MAlDcU,CAAgB,WAAY,CAC1D5C,cAAU6C,IAJoCC,EAAAxI,OAAAC,EAAA,EAAAD,CAAAsH,EAAA,GAG/BmB,GAH+BD,EAAA,GAAAA,EAAA,IAuEhD,OACE3H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACe,IACbF,EAAAC,EAAAC,cAAA,SAAOgE,MAAOW,EAAUgD,QAAS,SAAArI,GAAC,OAAI4G,EAAY5G,EAAEG,OAAOuE,WAE7DlE,EAAAC,EAAAC,cAAA,yBACW,IACTF,EAAAC,EAAAC,cAAA,SACE8B,KAAK,WACLkC,MAAOqC,EACPsB,QAAS,SAAArI,GAAC,OAAIgH,EAAYhH,EAAEG,OAAOuE,WAGvClE,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAQV,QAAQ,WAAWoE,QAAS,SAAApG,GAAC,OAzBzC,SAAiBA,GACfA,EAAEsI,iBACEjJ,EAAMkJ,MAAMlD,EAASmD,cAAezB,IAEtCqB,EAAY/I,EAAMiB,SAASiB,IAC3BkF,KAEAgC,MAAM,mCAkBmCrC,CAAQpG,KAAjD,8CC9DS0I,QAzBDC,IACXC,MAAM,QAAS,CACd3I,MAAO0I,IAAME,QACb1G,QAASwG,IAAMG,OACfC,SAAS,EACT7H,KAAMyH,IAAMG,OACZ1H,SAAUuH,IAAMG,OAChBrH,SAAUkH,IAAMG,SAEjBE,QAAQ,SAAAC,GAAI,MAAK,CAChBC,SADgB,WAEdD,EAAKF,SAAU,GAEjBI,YAJgB,SAIJC,GACVH,EAAKxH,SAAW2H,GAElBC,QAPgB,SAORC,GACNL,EAAK/H,KAAOoI,MAGfC,MAAM,SAAAN,GAAI,MAAK,CACdO,OADc,WAEZ,OAAOP,EAAKF,QAAU,OAAS,gBCDtBU,EApBFd,IACVC,MAAM,OAAQ,CACbvD,SAAUsD,IAAMG,OAChBrH,SAAUkH,IAAMG,OAChB7I,MAAO0I,IAAME,UAJJ,SAMD,SAAAI,GAAI,MAAK,CACjB/F,WAAW,KAEZ8F,QAAQ,SAAAC,GAAI,MAAK,CAChB9F,cADgB,SACFD,GACZ+F,EAAK/F,UAAYA,MAGpBqG,MAAM,SAAAN,GAAI,MAAK,CACdzF,WAEE,OADmBkG,YAAQT,GACTxD,MAAMkE,KAAK,SAAAC,GAAC,OAAIA,EAAEvE,UAAY4D,EAAK5D,eCW5CwE,GA5BFlB,IACVC,MAAM,OAAQ,CACbrH,GAAIoH,IAAMG,OACVzD,SAAUsD,IAAMG,OAChB5H,KAAMyH,IAAMG,OACZ/B,SAAU4B,IAAMG,OAChBrF,aAAckF,IAAMG,SAErBS,MAAM,SAAAN,GAAI,MAAK,CACda,iBAEE,OADmBJ,YAAQT,IAG7BpG,YACE,OAAOoG,EAAKa,WAAWjH,MAAMkH,OAAO,SAAAH,GAAC,OAAIA,EAAEvE,WAAa4D,EAAK5D,YAE/DW,gBACE,OAA6B,IAAtBiD,EAAKpG,MAAMmH,OAAe,EAAIf,EAAKpG,MAAMmH,QAElDzJ,oBACE,OAAO0I,EAAKa,WAAWG,OAAOhB,EAAKpG,MAAMmH,YAG5ChB,QAAQ,SAAAC,GAAI,MAAK,CAChBiB,gBADgB,SACAd,GACdH,EAAKxF,aAAe2F,MCrBpBe,GACE,oBADFA,GAEG,SAFHA,GAGE,cAHFA,GAII,oBAJJA,GAKQ,GAyBRC,IAtBc,IAAIC,QAAJ,uDAElB,CACEC,OAAQ,OACRC,KAAMlD,KAAKW,UAAU,CACnBwC,OAAQ,CACNvK,MAAO,GACPiB,KAAM,YACNiB,QACE,sGACF4G,SAAS,EACTtH,SAAU,uBACVL,SAAU,cAGdqJ,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAC,OAAYT,IACzBU,eAAgB,uBAKN,IAAIR,QAAJ,+BAAAO,OACiBT,GADjB,KAAAS,OACgCT,GADhC,gBAAAS,OAEZT,GAFY,UAAAS,OAGLT,IACT,CACEG,OAAQ,MACRG,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAC,OAAYT,SAKzBW,GAAe,IAAIT,QAAJ,+BAAAO,OACYT,GADZ,sBAAAS,OAEjBT,GAFiB,UAAAS,OAGVT,IACT,CACEG,OAAQ,MACRG,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAC,OAAYT,QAKzBY,GAAc,IAAIV,QAAJ,+BAAAO,OACaT,GADb,sBAAAS,OAEhBT,GAFgB,UAAAS,OAGTT,IACT,CACEG,OAAQ,MACRG,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAC,OAAYT,QC1DzB9K,GD+DasJ,IAChBC,MAAM,aAAc,CACnBqB,OAAQtB,IAAMqC,MAAMtC,GACpB7F,MAAO8F,IAAMqC,MAAMvB,GACnBhE,MAAOkD,IAAMqC,MAAMnB,MAEpBN,MAAM,SAAAN,GAAI,MAAK,CACdgC,WACE,MAAO,WAETC,qBACE,IAAMF,EAAQ,GAEd,OADAA,EAAMG,KAAKlC,EAAKgB,OAAO,IAChBe,MAbM,SAgBP,SAAA/B,GAAI,MAAK,CACjB3I,SAAU,KACV8K,aAAa,KAEdpC,QAAQ,SAAAC,GAAI,MAAK,CAChBoC,OADgB,WAEdpC,EAAK3I,SAAW,MAElBiI,MAJgB,SAIVlD,EAAU0B,GAKd,OAJAkC,EAAK3I,SAAW2I,EAAKxD,MAAMkE,KACzB,SAAAC,GAAC,OAAIA,EAAEvE,WAAaA,GAAYuE,EAAE7C,WAAaA,MAG7CkC,EAAK3I,UAMXgL,OAfgB,SAeT/J,GAGL,OAFA0H,EAAK3I,SAAW2I,EAAKxD,MAAMkE,KAAK,SAAAC,GAAC,OAAIA,EAAErI,KAAO8F,KAAKC,MAAM/F,OAErD0H,EAAK3I,UAMXiL,IAxBgB,SAwBZtL,GACFgJ,EAAKgB,OAAOkB,KAAKlL,IAEnBuL,QA3BgB,SA2BRzI,GACNkG,EAAKpG,MAAMsI,KAAKpI,IAEZ0I,cA9BU,eAAAC,EAAA/L,OAAAgM,EAAA,EAAAhM,CAAAiM,EAAAnL,EAAAoL,KAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAnL,EAAAwL,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EA+BGC,MAAMjC,IAAN,MAAqB,SAAAkC,GACpC9E,QAAQC,IAAI6E,KAhCA,aA+BVP,EA/BUG,EAAAK,MAkCL/C,QAAU,KAAOuC,EAAKvC,OAAS,KAlC1B,CAAA0C,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAmCKL,EAAKC,OAnCV,cAmCRA,EAnCQE,EAAAK,KAAAL,EAAAM,OAAA,SAoCLR,EAAKS,SApCA,wBAAAP,EAAAQ,SAAAZ,MAAA,yBAAAJ,EAAAiB,MAAAC,KAAAC,YAAA,GAuCVC,WAvCU,eAAAC,EAAApN,OAAAgM,EAAA,EAAAhM,CAAAiM,EAAAnL,EAAAoL,KAAA,SAAAmB,IAAA,IAAAjB,EAAAC,EAAA,OAAAJ,EAAAnL,EAAAwL,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EAwCGC,MAAMvB,IAAN,MAA0B,SAAAwB,GACzC9E,QAAQC,IAAI6E,KAzCA,aAwCVP,EAxCUkB,EAAAV,MA2CL/C,QAAU,KAAOuC,EAAKvC,OAAS,KA3C1B,CAAAyD,EAAAb,KAAA,eAAAa,EAAAb,KAAA,EA4CKL,EAAKC,OA5CV,cA4CRA,EA5CQiB,EAAAV,KAAAU,EAAAT,OAAA,SA6CLR,EAAKS,SA7CA,wBAAAQ,EAAAP,SAAAM,MAAA,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAgDhBK,WAhDgB,SAgDLnK,GACTsJ,MACE,IAAIhC,QAAJ,sDAAmE,CACjEC,OAAQ,OACRC,KAAMlD,KAAKW,UAAU,CACnBwC,OAAQzH,IAEV0H,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAC,OAAYT,IACzBU,eAAgB,wBARtB,MAWQ,SAAAyB,GACN9E,QAAQC,IAAI6E,MAGhBa,WAhEgB,SAgEL3J,GACT,IAAM4J,EAAG,wEACT5F,QAAQC,IAAI2F,GACZf,MACE,IAAIhC,QAAQ+C,EAAK,CACf9C,OAAQ,MACRC,KAAMlD,KAAKW,UAAU,CACnBwC,OAAQ,CACNtJ,KAAM,kBACNmE,SAAU,KACV0B,SAAU,KACVtD,aAAcD,EAAKC,gBAGvBgH,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAC,OAAYT,IACzBU,eAAgB,wBAbtB,MAgBQ,SAAAyB,GACN7D,MAAM6D,MAGJe,WAvFU,eAAAC,EAAA3N,OAAAgM,EAAA,EAAAhM,CAAAiM,EAAAnL,EAAAoL,KAAA,SAAA0B,IAAA,IAAAxB,EAAAC,EAAA,OAAAJ,EAAAnL,EAAAwL,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EAwFGC,MAAMtB,IAAN,MAAyB,SAAAuB,GACxC9E,QAAQC,IAAI6E,KAzFA,aAwFVP,EAxFUyB,EAAAjB,MA2FL/C,QAAU,KAAOuC,EAAKvC,OAAS,KA3F1B,CAAAgE,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EA4FKL,EAAKC,OA5FV,cA4FRA,EA5FQwB,EAAAjB,KAAAiB,EAAAhB,OAAA,SA6FLR,EAAKS,SA7FA,wBAAAe,EAAAd,SAAAa,MAAA,yBAAAD,EAAAX,MAAAC,KAAAC,YAAA,GAgGhBY,KAAMC,YAAI9B,EAAAnL,EAAAoL,KAAC,SAAU4B,EAAKlM,GAAf,IAAA0I,EAAAxE,EAAA5C,EAAA8K,EAAA,OAAA/B,EAAAnL,EAAAwL,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OACI,OADJwB,EAAAxB,KAAA,EACUnD,EAAKwC,gBADf,OAEG,OADRxB,EADK2D,EAAArB,KAAAqB,EAAAxB,KAAA,EAESnD,EAAKoE,aAFd,OAGG,OADR5H,EAFKmI,EAAArB,KAAAqB,EAAAxB,KAAA,EAGSnD,EAAK6D,aAHd,OAGLjK,EAHK+K,EAAArB,KAKHoB,EAAO,CACXlI,MAAO,GACP5C,MAAO,GACPoH,OAAQ,IAGVA,EAAO4D,QAAQ,SAAAC,GACbH,EAAK1D,OAAOkB,KAAK2C,EAAItD,UAGvB/E,EAAMoI,QAAQ,SAAAC,GACZA,EAAItD,OAAOjJ,GAAKuM,EAAIvM,GACpBoM,EAAKlI,MAAM0F,KAAK2C,EAAItD,UAGtB3H,EAAMgL,QAAQ,SAAAC,GACZH,EAAK9K,MAAMsI,KAAK2C,EAAItD,UAGtBuD,YAAc9E,EAAM0E,GAEhBpM,GACF0H,EAAKqC,OAAO/J,GAGd0H,EAAKmC,aAAc,EA9BV,yBAAAwC,EAAAlB,SAAUe,MAgCrBvH,YAhIgB,SAgIJhG,EAAM8N,GAChB,IAAIC,EAAW,IAAIC,SAEnBD,EAASE,OAAO,OAAQjO,GACxB+N,EAASE,OAAO,aAAc,aAC9BF,EAASE,OAAO,gBAAiB,YACjCF,EAASE,OAAO,QAASlF,EAAK3I,SAAS+E,UACvC4I,EAASE,OAAO,OAAQlF,EAAK3I,SAAS+E,UAEtC,IAAI+I,EAAM,IAAIC,eACdD,EAAIE,KACF,OACA,0DACA,GAGFF,EAAIG,OAAS,WAGX,IAAIC,EAAQnH,KAAKC,MAAMsF,KAAK6B,cAC5BxF,EAAK3I,SAAS4J,gBAAgBsE,EAAME,WACpCzF,EAAKkE,WAAWlE,EAAK3I,UAErB0N,EAAYpB,KAAK6B,eAEnBL,EAAIO,KAAKV,IAEXlO,YA3JgB,SA2JJG,EAAMD,EAAO+N,GACvB,IAAIC,EAAW,IAAIC,SAEnBD,EAASE,OAAO,OAAQjO,GACxB+N,EAASE,OAAO,aAAc,aAC9BF,EAASE,OAAO,gBAAiB,YACjCF,EAASE,OAAO,gBAAiB,OACjCF,EAASE,OAAO,QAASlF,EAAK3I,SAAS+E,UAEvC4I,EAASE,OAAO,OAAQlF,EAAK3I,SAAS+E,UAEtC,IAAI+I,EAAM,IAAIC,eACdD,EAAIE,KACF,OAEA,2DACA,GAGFF,EAAIG,OAAS,WAEX,IAAIC,EAAQnH,KAAKC,MAAMsF,KAAK6B,cAC5BjH,QAAQC,IAAI+G,GAEZhH,QAAQC,IAAImF,KAAK6B,cAEjBxF,EAAKiE,WAAW,CACd7H,SAAU4D,EAAK3I,SAAS+E,SACxB5D,SAAU+M,EAAME,YAGlBzF,EAAKuC,QAAQ,CACXnG,SAAU4D,EAAK3I,SAAS+E,SACxBpF,MAAOA,EACPwB,SAAU+M,EAAME,YAGlBlH,QAAQC,IAAIwB,EAAKpG,OAEjBmL,EAAYpB,KAAK6B,eAEnBL,EAAIO,KAAKV,OCvRUrP,SACzBS,GAAMoO,KAAKpH,OAAOC,aAAac,QAAQ,aAgDxBxE,mBAlCf,WAAe,IAAA8D,EAC2BjH,mBAAS,SADpCkH,EAAAhH,OAAAC,EAAA,EAAAD,CAAA+G,EAAA,GACNkI,EADMjI,EAAA,GACQkI,EADRlI,EAAA,GAQb,IAAKtH,GAAM+L,YACT,OAAO5K,EAAAC,EAAAC,cAAA,sBAGT,GAAIrB,GAAM+L,aAAe/L,GAAMiB,SAC7B,OAAOE,EAAAC,EAAAC,cAACoO,EAAD,CAAMzP,MAAOA,GAAO+E,SAV7B,WACE/E,GAAMgM,SACNwD,EAAgB,YAWlB,IAAMtG,EACa,UAAjBqG,EACEpO,EAAAC,EAAAC,cAAC8F,EAAD,CAAOnH,MAAOA,GAAOoH,QAASoI,IAE9BrO,EAAAC,EAAAC,cAACoO,EAAD,CAAMzP,MAAOA,KAGjB,OACEmB,EAAAC,EAAAC,cAAA,OAAKa,GAAG,mBACNf,EAAAC,EAAAC,cAAA,QAAMa,GAAG,aACPf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAc4H,QCvCtBwG,QACW,cAA7B1I,OAAO2I,SAASC,UAEe,UAA7B5I,OAAO2I,SAASC,UAEhB5I,OAAO2I,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5O,EAAAC,EAAAC,cAAC2O,GAAD,MAASjM,SAASC,eAAe,SD2H3C,kBAAmBiM,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.feed141f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport {\r\n  Image,\r\n  Video,\r\n  Transformation,\r\n  CloudinaryContext\r\n} from \"cloudinary-react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nexport default function Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  function handleExpandClick() {\r\n    setExpanded(!expanded);\r\n  }\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, level, text => {\r\n      handleExpandClick();\r\n    });\r\n  }\r\n\r\n  const level = store.loggedIn.nextChallange;\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {/* {store.loggedIn.nextChallange.map((level, i) => ( */}\r\n      <Card key={level.level} className={classes.card}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n              {level.level}\r\n            </Avatar>\r\n          }\r\n          title={level.name}\r\n          subheader={level.category}\r\n        />\r\n\r\n        <CardContent>\r\n          <Video\r\n            id=\"myVideo\"\r\n            cloudName=\"deolievif\"\r\n            publicId={level.publicId}\r\n            width=\"100%\"\r\n            height=\"200px\"\r\n            autoPlay\r\n            loop\r\n            muted\r\n            playsInline\r\n          />\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {level.details}\r\n          </Typography>\r\n        </CardContent>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <div className=\"fileinputs\">\r\n              <input\r\n                type=\"file\"\r\n                className=\"file\"\r\n                onChange={e => processFile(e, level)}\r\n              />\r\n              <div className=\"fakefile\">\r\n                <Button variant=\"outlined\">\r\n                  Ladda upp <VideoIcon />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n      {/* ))} */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image, Video } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  if (isVisible) {\r\n    document.getElementById(item.publicId).play();\r\n  } else {\r\n    document.getElementById(item.publicId).pause();\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"item-list\">\r\n      {store.items.map((item, i) => (\r\n        <VisibilitySensor\r\n          key={item.publicId}\r\n          onChange={isVisible => onChange(item, isVisible)}\r\n        >\r\n          <Card key={item.publicId} className={classes.card}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                  <Image\r\n                    cloudName=\"deolievif\"\r\n                    publicId={item.user.profileImage}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                  />\r\n                </Avatar>\r\n              }\r\n              title={item.user.name}\r\n              subheader={item.level}\r\n            />\r\n            <CardContent>\r\n              <Video\r\n                id={item.publicId}\r\n                cloudName=\"deolievif\"\r\n                publicId={item.publicId}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                loop\r\n                muted\r\n                playsInline\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </VisibilitySensor>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport UserIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab label=\"Flöde\" icon={<FavoriteIcon />} />\r\n          <Tab label=\"Utmaningar\" icon={<StarIcon />} />\r\n          <Tab label=\"Topplista\" icon={<StarIcon />} />\r\n          <Tab label={store.loggedIn.userName} icon={<UserIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <ItemList store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Game store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <div className=\"profile\">Topplista</div>\r\n          <div className=\"highscore\">\r\n            <List className={classes.root}>\r\n              {store.users.map(user => (\r\n                <>\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <Image\r\n                          cloudName=\"deolievif\"\r\n                          publicId={user.profileImage}\r\n                          width=\"100%\"\r\n                          height=\"100%\"\r\n                        />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={user.name}\r\n                      secondary={user.highscore}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                </>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 3 && (\r\n        <TabContainer>\r\n          <div className=\"profile\">\r\n            {store.loggedIn.name}\r\n            <Image\r\n              cloudName=\"deolievif\"\r\n              publicId={store.loggedIn.profileImage}\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n            <div className=\"fileinputs\">\r\n              <input\r\n                type=\"file\"\r\n                className=\"file\"\r\n                onChange={e => processFile(e)}\r\n              />\r\n              <div className=\"fakefile\">\r\n                <Button variant=\"outlined\">\r\n                  Ladda upp <ImageIcon />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <Button variant=\"outlined\" onClick={logout}>\r\n              Logga ut\r\n            </Button>\r\n          </div>\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   console.log(window.localStorage.getItem(\"loggedIn\"));\r\n\r\n  //   if (!store.users.length) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (window.localStorage.getItem(\"loggedIn\")) {\r\n  //     if (store.login2(window.localStorage.getItem(\"loggedIn\"))) {\r\n  //       console.log(\"logged in\");\r\n  //       onLogin();\r\n  //     } else {\r\n  //       console.log(\":(\");\r\n  //     }\r\n  //   }\r\n  // });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Användarnamn{\" \"}\r\n        <input value={userName} onInput={e => setUserName(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        Lösenord{\" \"}\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onInput={e => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <Button variant=\"outlined\" onClick={e => onClick(e)}>\r\n        LOGIN\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { types } from \"mobx-state-tree\";\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    level: types.integer,\r\n    details: types.string,\r\n    is_done: false,\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.string\r\n  })\r\n  .actions(self => ({\r\n    markDone() {\r\n      self.is_done = true;\r\n    },\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    status() {\r\n      return self.is_done ? \"Done\" : \"Not Done\";\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName == self.userName);\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string\r\n  })\r\n  .views(self => ({\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get highscore() {\r\n      return self.items.length === 0 ? 0 : self.items.length;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, flow, applySnapshot, getEnv, onAction } from \"mobx-state-tree\";\r\nimport { toJS } from \"mobx\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\n\r\nconst config = {\r\n  base: \"appC7N77wl4iVEXGD\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 20\r\n};\r\n\r\nconst insertLevel = new Request(\r\n  `https://api.airtable.com/v0/appC7N77wl4iVEXGD/Levels`,\r\n  {\r\n    method: \"post\",\r\n    body: JSON.stringify({\r\n      fields: {\r\n        level: 11,\r\n        name: \"Bell Taps\",\r\n        details:\r\n          \"Transfer ball from side to side in a “bell ringing” motion, using the inside of both feet\",\r\n        is_done: false,\r\n        publicId: \"xriaksiq3gipz0dupgny\",\r\n        category: \"Beginner\"\r\n      }\r\n    }),\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`,\r\n      \"Content-Type\": \"application/json\"\r\n    })\r\n  }\r\n);\r\n\r\nconst request = new Request(\r\n  `https://api.airtable.com/v0/${config.base}/${config.table}?maxRecords=${\r\n    config.maxRecords\r\n  }&view=${config.view}`,\r\n  {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`\r\n    })\r\n  }\r\n);\r\n\r\nconst itemsRequest = new Request(\r\n  `https://api.airtable.com/v0/${config.base}/Items?maxRecords=${\r\n    config.maxRecords\r\n  }&view=${config.view}`,\r\n  {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`\r\n    })\r\n  }\r\n);\r\n\r\nconst userRequest = new Request(\r\n  `https://api.airtable.com/v0/${config.base}/Users?maxRecords=${\r\n    config.maxRecords\r\n  }&view=${config.view}`,\r\n  {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`\r\n    })\r\n  }\r\n);\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User)\r\n  })\r\n  .views(self => ({\r\n    get test() {\r\n      return \"testing\";\r\n    },\r\n    get filteredLevels() {\r\n      const array = [];\r\n      array.push(self.levels[0]);\r\n      return array;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false\r\n  }))\r\n  .actions(self => ({\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    async fetchAirtable() {\r\n      var resp = await fetch(request).catch(err => {\r\n        console.log(err);\r\n      });\r\n      if (resp.status >= 200 && resp.status < 300) {\r\n        var json = await resp.json();\r\n        return json.records;\r\n      }\r\n    },\r\n    async fetchItems() {\r\n      var resp = await fetch(itemsRequest).catch(err => {\r\n        console.log(err);\r\n      });\r\n      if (resp.status >= 200 && resp.status < 300) {\r\n        var json = await resp.json();\r\n        return json.records;\r\n      }\r\n    },\r\n    insertItem(item) {\r\n      fetch(\r\n        new Request(`https://api.airtable.com/v0/appC7N77wl4iVEXGD/Items`, {\r\n          method: \"post\",\r\n          body: JSON.stringify({\r\n            fields: item\r\n          }),\r\n          headers: new Headers({\r\n            Authorization: `Bearer ${config.apiKey}`,\r\n            \"Content-Type\": \"application/json\"\r\n          })\r\n        })\r\n      ).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    updateUser(user) {\r\n      const url = `https://api.airtable.com/v0/appC7N77wl4iVEXGD/Users/recPDEuzfAvPaJ5Jf`;\r\n      console.log(url);\r\n      fetch(\r\n        new Request(url, {\r\n          method: \"put\",\r\n          body: JSON.stringify({\r\n            fields: {\r\n              name: \"Gustav Karlsson\",\r\n              userName: \"gk\",\r\n              password: \"gk\",\r\n              profileImage: user.profileImage\r\n            }\r\n          }),\r\n          headers: new Headers({\r\n            Authorization: `Bearer ${config.apiKey}`,\r\n            \"Content-Type\": \"application/json\"\r\n          })\r\n        })\r\n      ).catch(err => {\r\n        alert(err);\r\n      });\r\n    },\r\n    async fetchUsers() {\r\n      var resp = await fetch(userRequest).catch(err => {\r\n        console.log(err);\r\n      });\r\n      if (resp.status >= 200 && resp.status < 300) {\r\n        var json = await resp.json();\r\n        return json.records;\r\n      }\r\n    },\r\n    init: flow(function* init(id) {\r\n      var levels = yield self.fetchAirtable();\r\n      var users = yield self.fetchUsers();\r\n      var items = yield self.fetchItems();\r\n\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: []\r\n      };\r\n\r\n      levels.forEach(elm => {\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.forEach(elm => {\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, level, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"resource_type\", \"raw\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        //\"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        self.insertItem({\r\n          userName: self.loggedIn.userName,\r\n          publicId: myObj.public_id\r\n        });\r\n\r\n        self.addItem({\r\n          userName: self.loggedIn.userName,\r\n          level: level,\r\n          publicId: myObj.public_id\r\n        });\r\n\r\n        console.log(self.items);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return <div>loading</div>;\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}