{"version":3,"sources":["components/Game.js","components/ItemList.js","components/Main.js","components/Login.js","models/Level.js","models/Item.js","models/User.js","models/LevelStore.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","card","maxWidth","marginTop","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Game","_ref","store","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","expanded","setExpanded","processFile","e","level","file","target","files","text","react_default","a","createElement","className","levels","map","i","visibility_sensor_default","key","publicId","onChange","isVisible","item","setVisibility","document","getElementById","play","pause","Card","CardHeader","Avatar","aria-label","title","name","subheader","category","CardContent","lib","id","cloudName","width","loop","muted","playsInline","preload","poster","Typography","variant","color","component","details","Collapse","in","timeout","unmountOnExit","type","Button","VideoCall_default","observer","items","user","profileImage","action","isDone","Star_default","TabContainer","props","style","padding","children","root","flexGrow","onLogout","tabIndex","setTabIndex","AppBar","position","Tabs","value","event","newValue","scrollButtons","indicatorColor","textColor","Tab","label","icon","Favorite_default","loggedIn","userName","SupervisedUserCircle_default","components_ItemList","List","users","Fragment","ListItem","ListItemAvatar","ListItemText","primary","secondary","highscore","Divider","uploadImage","Image_default","onClick","window","localStorage","removeItem","Login","onLogin","_useState","_useState2","setUserName","_useState3","_useState4","password","setPassword","_useLocalStorage","initialValue","_useState5","getItem","JSON","parse","error","console","log","_useState6","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","undefined","_useLocalStorage2","setLoggedIn","onInput","preventDefault","login","toLowerCase","alert","Level","types","model","integer","string","is_done","self","actions","markDone","setPublicId","newPublicId","setName","newName","views","status","resourceType","Item","maybeNull","getRoot","find","x","User","levelStore","filter","length","nextChallange","setProfileImage","config","request","Request","method","body","fields","headers","Headers","Authorization","concat","Content-Type","itemsRequest","userRequest","array","test","filteredLevels","push","initzialize","logout","login2","add","addItem","fetchAirtable","_fetchAirtable","asyncToGenerator","regenerator_default","mark","_callee","resp","json","wrap","_context","prev","next","fetch","err","sent","abrupt","records","stop","apply","this","arguments","fetchItems","_fetchItems","_callee2","_context2","insertItem","updateUser","url","fetchUsers","_fetchUsers","_callee3","_context3","init","flow","data","_context4","forEach","elm","applySnapshot","onProcessed","formdata","FormData","append","xhr","XMLHttpRequest","open","onload","myObj","responseText","public_id","send","menuSelected","setMenuSelected","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mXA4BMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,IACVC,UAAW,QAEbC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYV,EAAMW,YAAYC,OAAO,YAAa,CAChDC,SAAUb,EAAMW,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,SAIV,SAASC,EAATC,GAAyB,IAATC,EAASD,EAATC,MACvBC,EAAUxB,IADsByB,EAENC,IAAMC,UAAS,GAFTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE/BM,EAF+BH,EAAA,GAErBI,EAFqBJ,EAAA,GAQtC,SAASK,EAAYC,EAAGC,GACtB,IAAIC,EAAOF,EAAEG,OAAOC,MAAM,GAE1Bf,EAAMU,YAAYG,EAAMD,EAAO,SAAAI,GAN/BP,GAAaD,KAoBf,OACES,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEZpB,EAAMqB,OAAOC,IAAI,SAACV,EAAOW,GAAR,OAChBN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,IAAKb,EAAMc,SACXC,SAAU,SAAAC,GAAS,OAf3B,SAAkBC,EAAMD,GACtBC,EAAKC,cAAcF,GACfA,EACFG,SAASC,eAAeH,EAAKH,UAAUO,OAEvCF,SAASC,eAAeH,EAAKH,UAAUQ,QAUZP,CAASf,EAAOgB,KAEvCX,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMV,IAAKb,EAAMA,MAAOQ,UAAWnB,EAAQrB,MACzCqC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEzC,OACEsB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQC,aAAW,SAASlB,UAAWnB,EAAQN,QAC5CiB,EAAMA,OAGX2B,MAAO3B,EAAM4B,KACbC,UAAW7B,EAAM8B,WAGnBzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACE1B,EAAAC,EAAAC,cAACyB,EAAA,MAAD,CACEC,GAAIjC,EAAMc,SACVoB,UAAU,YACVpB,SAAUd,EAAMc,SAChBqB,MAAM,OACN/D,OAAO,OACPgE,MAAI,EACJC,OAAK,EACLC,aAAW,EACXC,QAAQ,WACRC,OAAQxC,EAAMwC,SAEhBnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KACzD5C,EAAM6C,UAGXxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAUC,GAAInD,EAAUoD,QAAQ,OAAOC,eAAa,GAClD5C,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACE1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACE2C,KAAK,OACL1C,UAAU,OACVO,SAAU,SAAAhB,GAAC,OAAID,EAAYC,EAAGC,MAEhCK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQT,QAAQ,YAAhB,aACYrC,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,8CC/G1BzC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,IACVC,UAAW,QAEbC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYV,EAAMW,YAAYC,OAAO,YAAa,CAChDC,SAAUb,EAAMW,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,SA0DVoE,kBA7Cf,SAAAlE,GAA6B,IAATC,EAASD,EAATC,MACZC,EAAUxB,IAEhB,OACEwC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZpB,EAAMkE,MAAM5C,IAAI,SAACO,EAAMN,GAAP,OACfN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,IAAKI,EAAKH,SACVC,SAAU,SAAAC,GAAS,OAjB7B,SAAkBC,EAAMD,GACtBC,EAAKC,cAAcF,GACfA,EACFG,SAASC,eAAeH,EAAKH,UAAUO,OAEvCF,SAASC,eAAeH,EAAKH,UAAUQ,QAYVP,CAASE,EAAMD,KAEtCX,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMV,IAAKI,EAAKH,SAAUN,UAAWnB,EAAQrB,MAC3CqC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEzC,OACEsB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQC,aAAW,SAASlB,UAAWnB,EAAQN,QAC7CsB,EAAAC,EAAAC,cAACyB,EAAA,MAAD,CACEE,UAAU,YACVpB,SAAUG,EAAKsC,KAAKC,aACpBrB,MAAM,OACN/D,OAAO,UAIbqF,OAAQxC,EAAKyC,QAAUrD,EAAAC,EAAAC,cAACoD,EAAArD,EAAD,MACvBqB,MAAOV,EAAKsC,KAAK3B,KACjBC,UAAWZ,EAAKjB,QAElBK,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACE1B,EAAAC,EAAAC,cAACyB,EAAA,MAAD,CACEC,GAAIhB,EAAKH,SACToB,UAAU,YACVpB,SAAUG,EAAKH,SACfqB,MAAM,OACN/D,OAAO,OACPgE,MAAI,EACJC,OAAK,EACLC,aAAW,iJCzD3B,SAASsB,EAAaC,GACpB,OACExD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAYG,UAAU,MAAMkB,MAAO,CAAEC,QAAS,KAC3CF,EAAMG,UASb,IAAMnG,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCkG,KAAM,CACJC,SAAU,EACV/B,MAAO,OACPnD,gBAAiB,cAmHNqE,kBA/Gf,SAAAlE,GAAmC,IAAnBC,EAAmBD,EAAnBC,MAAO+E,EAAYhF,EAAZgF,SACf9E,EAAUxB,IADiByB,EAEDC,IAAMC,SAAS,GAFdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE1B8E,EAF0B3E,EAAA,GAEhB4E,EAFgB5E,EAAA,GAmBjC,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQ4E,MACtB5D,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAQC,SAAS,QAAQ5B,MAAM,WAC7BtC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACEC,MAAOL,EACPrD,SApBR,SAAsB2D,EAAOC,GAC3BN,EAAYM,IAoBNjC,QAAQ,aACRkC,cAAc,KACdC,eAAe,UACfC,UAAU,WAEVzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAKC,MAAM,WAAQC,KAAM5E,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,QACzBD,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAKC,MAAM,aAAaC,KAAM5E,EAAAC,EAAAC,cAACoD,EAAArD,EAAD,QAC9BD,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAKC,MAAM,YAAYC,KAAM5E,EAAAC,EAAAC,cAACoD,EAAArD,EAAD,QAC7BD,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAKC,MAAO5F,EAAM+F,SAASC,SAAUH,KAAM5E,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,UAGjC,IAAb8D,GACC/D,EAAAC,EAAAC,cAACqD,EAAD,KACEvD,EAAAC,EAAAC,cAAC+E,EAAD,CAAUlG,MAAOA,KAGP,IAAbgF,GACC/D,EAAAC,EAAAC,cAACqD,EAAD,KACEvD,EAAAC,EAAAC,cAACrB,EAAD,CAAME,MAAOA,KAGH,IAAbgF,GACC/D,EAAAC,EAAAC,cAACqD,EAAD,KACEvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAM/E,UAAWnB,EAAQ4E,MACtB7E,EAAMoG,MAAM9E,IAAI,SAAA6C,GAAI,OACnBlD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmF,SAAA,KACEpF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACErF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACEtF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACEpB,EAAAC,EAAAC,cAACyB,EAAA,MAAD,CACEE,UAAU,YACVpB,SAAUyC,EAAKC,aACfrB,MAAM,OACN/D,OAAO,WAIbiC,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CACEC,QAAStC,EAAK3B,KACdkE,UAAWvC,EAAKwC,aAGpB1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAStD,QAAQ,QAAQE,UAAU,aAOjC,IAAbwB,GACC/D,EAAAC,EAAAC,cAACqD,EAAD,KACEvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZpB,EAAM+F,SAASvD,KAChBvB,EAAAC,EAAAC,cAACyB,EAAA,MAAD,CACEE,UAAU,YACVpB,SAAU1B,EAAM+F,SAAS3B,aACzBrB,MAAM,OACN/D,OAAO,SAETiC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACE2C,KAAK,OACL1C,UAAU,OACVO,SAAU,SAAAhB,GAAC,OAlFzB,SAAqBA,EAAGC,GACtB,IAAIC,EAAOF,EAAEG,OAAOC,MAAM,GAE1Bf,EAAM6G,YAAYhG,EAAM,SAAAG,MA+EGN,CAAYC,MAE7BM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQT,QAAQ,YAAhB,aACYrC,EAAAC,EAAAC,cAAC2F,EAAA5F,EAAD,UAKlBD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQT,QAAQ,WAAWyD,QAvFrC,WACEC,OAAOC,aAAaC,WAAW,YAC/BnC,MAqFQ,iBC7IG,SAASoC,EAATpH,GAAmC,IAAlBC,EAAkBD,EAAlBC,MAAOoH,EAAWrH,EAAXqH,QAAWC,EAChBjH,mBAAS,IADOkH,EAAAhH,OAAAC,EAAA,EAAAD,CAAA+G,EAAA,GACzCrB,EADyCsB,EAAA,GAC/BC,EAD+BD,EAAA,GAAAE,EAEhBpH,mBAAS,IAFOqH,EAAAnH,OAAAC,EAAA,EAAAD,CAAAkH,EAAA,GAEzCE,EAFyCD,EAAA,GAE/BE,EAF+BF,EAAA,GAAAG,EAwBhD,SAAyBnG,EAAKoG,GAAc,IAAAC,EAGJ1H,mBAAS,WAC7C,IAEE,IAAMyB,EAAOmF,OAAOC,aAAac,QAAQtG,GAEzC,OAAOI,EAAOmG,KAAKC,MAAMpG,GAAQgG,EACjC,MAAOK,GAGP,OADAC,QAAQC,IAAIF,GACLL,KAZ+BQ,EAAA/H,OAAAC,EAAA,EAAAD,CAAAwH,EAAA,GAGnCQ,EAHmCD,EAAA,GAGtBE,EAHsBF,EAAA,GAiC1C,MAAO,CAACC,EAfS,SAAAjD,GACf,IAEE,IAAMmD,EACJnD,aAAiBoD,SAAWpD,EAAMiD,GAAejD,EAEnDkD,EAAeC,GAEfxB,OAAOC,aAAayB,QAAQjH,EAAKuG,KAAKW,UAAUH,IAChD,MAAON,GAEPC,QAAQC,IAAIF,MAlDcU,CAAgB,WAAY,CAC1D5C,cAAU6C,IAJoCC,EAAAxI,OAAAC,EAAA,EAAAD,CAAAsH,EAAA,GAG/BmB,GAH+BD,EAAA,GAAAA,EAAA,IAuEhD,OACE7H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACe,IACbF,EAAAC,EAAAC,cAAA,SAAOkE,MAAOW,EAAUgD,QAAS,SAAArI,GAAC,OAAI4G,EAAY5G,EAAEG,OAAOuE,WAE7DpE,EAAAC,EAAAC,cAAA,yBACW,IACTF,EAAAC,EAAAC,cAAA,SACE2C,KAAK,WACLuB,MAAOqC,EACPsB,QAAS,SAAArI,GAAC,OAAIgH,EAAYhH,EAAEG,OAAOuE,WAGvCpE,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQT,QAAQ,WAAWyD,QAAS,SAAApG,GAAC,OAzBzC,SAAiBA,GACfA,EAAEsI,iBACEjJ,EAAMkJ,MAAMlD,EAASmD,cAAezB,IAEtCqB,EAAY/I,EAAM+F,SAASlD,IAC3BuE,KAEAgC,MAAM,mCAkBmCrC,CAAQpG,KAAjD,8CCrDS0I,EAlCDC,IACXC,MAAM,QAAS,CACd3I,MAAO0I,IAAME,QACb/F,QAAS6F,IAAMG,OACfC,SAAS,EACTlH,KAAM8G,IAAMG,OACZ/G,SAAU4G,IAAMG,OAChB/H,SAAU4H,IAAMG,SAPN,SASF,SAAAE,GAAI,MAAK,CACjB/H,WAAW,KAEZgI,QAAQ,SAAAD,GAAI,MAAK,CAChBE,SADgB,WAEdF,EAAKD,SAAU,GAEjBI,YAJgB,SAIJC,GACVJ,EAAKjI,SAAWqI,GAElBC,QAPgB,SAORC,GACNN,EAAKnH,KAAOyH,GAEdnI,cAVgB,SAUFF,GACZ+H,EAAK/H,UAAYA,MAGpBsI,MAAM,SAAAP,GAAI,MAAK,CACdQ,OADc,WAEZ,OAAOR,EAAKD,QAAU,OAAS,YAEjCtG,OAJc,WAKZ,MAAO,CAAE1B,SAAUiI,EAAKjI,SAAW,OAAQ0I,aAAc,aCThDC,EArBFf,IACVC,MAAM,OAAQ,CACbvD,SAAUsD,IAAMG,OAChB/H,SAAU4H,IAAMG,OAChB7I,MAAO0I,IAAME,QACblF,OAAQgF,IAAMgB,UAAUhB,IAAK,WALpB,SAOD,SAAAK,GAAI,MAAK,CACjB/H,WAAW,KAEZgI,QAAQ,SAAAD,GAAI,MAAK,CAChB7H,cADgB,SACFF,GACZ+H,EAAK/H,UAAYA,MAGpBsI,MAAM,SAAAP,GAAI,MAAK,CACdxF,WAEE,OADmBoG,YAAQZ,GACTvD,MAAMoE,KAAK,SAAAC,GAAC,OAAIA,EAAEzE,WAAa2D,EAAK3D,eCU7C0E,GA5BFpB,IACVC,MAAM,OAAQ,CACb1G,GAAIyG,IAAMG,OACVzD,SAAUsD,IAAMG,OAChBjH,KAAM8G,IAAMG,OACZ/B,SAAU4B,IAAMG,OAChBrF,aAAckF,IAAMG,SAErBS,MAAM,SAAAP,GAAI,MAAK,CACdgB,iBAEE,OADmBJ,YAAQZ,IAG7BzF,YACE,OAAOyF,EAAKgB,WAAWzG,MAAM0G,OAAO,SAAAH,GAAC,OAAIA,EAAEzE,WAAa2D,EAAK3D,YAE/DW,gBACE,OAA6B,IAAtBgD,EAAKzF,MAAM2G,OAAe,EAAIlB,EAAKzF,MAAM2G,QAElDC,oBACE,OAAOnB,EAAKgB,WAAWtJ,OAAOsI,EAAKzF,MAAM2G,YAG5CjB,QAAQ,SAAAD,GAAI,MAAK,CAChBoB,gBADgB,SACAhB,GACdJ,EAAKvF,aAAe2F,MCtBpBiB,GACE,oBADFA,GAEG,SAFHA,GAGE,cAHFA,GAII,oBAJJA,GAKQ,GAyBRC,IAtBc,IAAIC,QAAJ,uDAElB,CACEC,OAAQ,OACRC,KAAMpD,KAAKW,UAAU,CACnB0C,OAAQ,CACNzK,MAAO,GACP4B,KAAM,YACNiB,QACE,sGACFiG,SAAS,EACThI,SAAU,uBACVgB,SAAU,cAGd4I,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAC,OAAYT,IACzBU,eAAgB,uBAKN,IAAIR,QAAJ,+BAAAO,OACiBT,GADjB,KAAAS,OACgCT,GADhC,gBAAAS,OAEZT,GAFY,UAAAS,OAGLT,IACT,CACEG,OAAQ,MACRG,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAC,OAAYT,SAKzBW,GAAe,IAAIT,QAAJ,+BAAAO,OACYT,GADZ,sBAAAS,OAEjBT,GAFiB,UAAAS,OAGVT,IACT,CACEG,OAAQ,MACRG,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAC,OAAYT,QAKzBY,GAAc,IAAIV,QAAJ,+BAAAO,OACaT,GADb,sBAAAS,OAEhBT,GAFgB,UAAAS,OAGTT,IACT,CACEG,OAAQ,MACRG,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAC,OAAYT,QCzDzBhL,GD8DasJ,IAChBC,MAAM,aAAc,CACnBlI,OAAQiI,IAAMuC,MAAMxC,GACpBnF,MAAOoF,IAAMuC,MAAMxB,GACnBjE,MAAOkD,IAAMuC,MAAMnB,MAEpBR,MAAM,SAAAP,GAAI,MAAK,CACdmC,WACE,MAAO,WAETC,qBACE,IAAMF,EAAQ,GAEd,OADAA,EAAMG,KAAKrC,EAAKtI,OAAO,IAChBwK,MAbM,SAgBP,SAAAlC,GAAI,MAAK,CACjB5D,SAAU,KACVkG,aAAa,KAEdrC,QAAQ,SAAAD,GAAI,MAAK,CAChBuC,OADgB,WAEdvC,EAAK5D,SAAW,MAElBmD,MAJgB,SAIVlD,EAAU0B,GAKd,OAJAiC,EAAK5D,SAAW4D,EAAKvD,MAAMoE,KACzB,SAAAC,GAAC,OAAIA,EAAEzE,WAAaA,GAAYyE,EAAE/C,WAAaA,MAG7CiC,EAAK5D,UAMXoG,OAfgB,SAeTtJ,GAGL,OAFA8G,EAAK5D,SAAW4D,EAAKvD,MAAMoE,KAAK,SAAAC,GAAC,OAAIA,EAAE5H,KAAOmF,KAAKC,MAAMpF,OAErD8G,EAAK5D,UAMXqG,IAxBgB,SAwBZxL,GACF+I,EAAKtI,OAAO2K,KAAKpL,IAEnByL,QA3BgB,SA2BRxK,GACN8H,EAAKzF,MAAM8H,KAAKnK,IAEZyK,cA9BU,eAAAC,EAAAjM,OAAAkM,EAAA,EAAAlM,CAAAmM,EAAAvL,EAAAwL,KAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAvL,EAAA4L,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EA+BGC,MAAMjC,IAAN,MAAqB,SAAAkC,GACpChF,QAAQC,IAAI+E,KAhCA,aA+BVP,EA/BUG,EAAAK,MAkCLjD,QAAU,KAAOyC,EAAKzC,OAAS,KAlC1B,CAAA4C,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAmCKL,EAAKC,OAnCV,cAmCRA,EAnCQE,EAAAK,KAAAL,EAAAM,OAAA,SAoCLR,EAAKS,SApCA,wBAAAP,EAAAQ,SAAAZ,MAAA,yBAAAJ,EAAAiB,MAAAC,KAAAC,YAAA,GAuCVC,WAvCU,eAAAC,EAAAtN,OAAAkM,EAAA,EAAAlM,CAAAmM,EAAAvL,EAAAwL,KAAA,SAAAmB,IAAA,IAAAjB,EAAAC,EAAA,OAAAJ,EAAAvL,EAAA4L,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EAwCGC,MAAMvB,IAAN,MAA0B,SAAAwB,GACzChF,QAAQC,IAAI+E,KAzCA,aAwCVP,EAxCUkB,EAAAV,MA2CLjD,QAAU,KAAOyC,EAAKzC,OAAS,KA3C1B,CAAA2D,EAAAb,KAAA,eAAAa,EAAAb,KAAA,EA4CKL,EAAKC,OA5CV,cA4CRA,EA5CQiB,EAAAV,KAAAU,EAAAT,OAAA,SA6CLR,EAAKS,SA7CA,wBAAAQ,EAAAP,SAAAM,MAAA,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAgDhBK,WAhDgB,SAgDLlM,GACTqL,MACE,IAAIhC,QAAJ,sDAAmE,CACjEC,OAAQ,OACRC,KAAMpD,KAAKW,UAAU,CACnB0C,OAAQxJ,IAEVyJ,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAC,OAAYT,IACzBU,eAAgB,wBARtB,MAWQ,SAAAyB,GACNhF,QAAQC,IAAI+E,MAGhBa,WAhEgB,SAgEL7J,GACT,IAAM8J,EAAG,wEACT9F,QAAQC,IAAI6F,GACZf,MACE,IAAIhC,QAAQ+C,EAAK,CACf9C,OAAQ,MACRC,KAAMpD,KAAKW,UAAU,CACnB0C,OAAQ,CACN7I,KAAM,kBACNwD,SAAU,KACV0B,SAAU,KACVtD,aAAcD,EAAKC,gBAGvBkH,QAAS,IAAIC,QAAQ,CACnBC,cAAa,UAAAC,OAAYT,IACzBU,eAAgB,wBAbtB,MAgBQ,SAAAyB,GACN/D,MAAM+D,MAGJe,WAvFU,eAAAC,EAAA7N,OAAAkM,EAAA,EAAAlM,CAAAmM,EAAAvL,EAAAwL,KAAA,SAAA0B,IAAA,IAAAxB,EAAAC,EAAA,OAAAJ,EAAAvL,EAAA4L,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EAwFGC,MAAMtB,IAAN,MAAyB,SAAAuB,GACxChF,QAAQC,IAAI+E,KAzFA,aAwFVP,EAxFUyB,EAAAjB,MA2FLjD,QAAU,KAAOyC,EAAKzC,OAAS,KA3F1B,CAAAkE,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EA4FKL,EAAKC,OA5FV,cA4FRA,EA5FQwB,EAAAjB,KAAAiB,EAAAhB,OAAA,SA6FLR,EAAKS,SA7FA,wBAAAe,EAAAd,SAAAa,MAAA,yBAAAD,EAAAX,MAAAC,KAAAC,YAAA,GAgGhBY,KAAMC,YAAI9B,EAAAvL,EAAAwL,KAAC,SAAU4B,EAAKzL,GAAf,IAAAxB,EAAA+E,EAAAlC,EAAAsK,EAAA,OAAA/B,EAAAvL,EAAA4L,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OACI,OADJwB,EAAAxB,KAAA,EACUtD,EAAK2C,gBADf,OAEG,OADRjL,EADKoN,EAAArB,KAAAqB,EAAAxB,KAAA,EAEStD,EAAKuE,aAFd,OAGG,OADR9H,EAFKqI,EAAArB,KAAAqB,EAAAxB,KAAA,EAGStD,EAAKgE,aAHd,OAGLzJ,EAHKuK,EAAArB,KAKHoB,EAAO,CACXpI,MAAO,GACPlC,MAAO,GACP7C,OAAQ,IAGVA,EAAOqN,QAAQ,SAAAC,GACbH,EAAKnN,OAAO2K,KAAK2C,EAAItD,UAGvBjF,EAAMsI,QAAQ,SAAAC,GACZA,EAAItD,OAAOxI,GAAK8L,EAAI9L,GACpB2L,EAAKpI,MAAM4F,KAAK2C,EAAItD,UAGtBnH,EAAMwK,QAAQ,SAAAC,GACZH,EAAKtK,MAAM8H,KAAK2C,EAAItD,UAGtBuD,YAAcjF,EAAM6E,GAEhB3L,GACF8G,EAAKwC,OAAOtJ,GAGd8G,EAAKsC,aAAc,EA9BV,yBAAAwC,EAAAlB,SAAUe,MAgCrBzH,YAhIgB,SAgIJhG,EAAMgO,GAChB,IAAIC,EAAW,IAAIC,SAEnBD,EAASE,OAAO,OAAQnO,GACxBiO,EAASE,OAAO,aAAc,aAC9BF,EAASE,OAAO,gBAAiB,YACjCF,EAASE,OAAO,QAASrF,EAAK5D,SAASC,UACvC8I,EAASE,OAAO,OAAQrF,EAAK5D,SAASC,UAEtC,IAAIiJ,EAAM,IAAIC,eACdD,EAAIE,KACF,OACA,0DACA,GAGFF,EAAIG,OAAS,WAGX,IAAIC,EAAQrH,KAAKC,MAAMwF,KAAK6B,cAC5B3F,EAAK5D,SAASgF,gBAAgBsE,EAAME,WACpC5F,EAAKqE,WAAWrE,EAAK5D,UAErB8I,EAAYpB,KAAK6B,eAEnBL,EAAIO,KAAKV,IAEXpO,YA3JgB,SA2JJG,EAAMD,EAAOiO,GACvB,IAAIC,EAAW,IAAIC,SAEnBD,EAASE,OAAO,OAAQnO,GACxBiO,EAASE,OAAO,aAAc,aAC9BF,EAASE,OAAO,gBAAiB,YACjCF,EAASE,OAAO,gBAAiB,OACjCF,EAASE,OAAO,QAASrF,EAAK5D,SAASC,UAEvC8I,EAASE,OAAO,OAAQrF,EAAK5D,SAASC,UAEtC,IAAIiJ,EAAM,IAAIC,eACdD,EAAIE,KACF,OACA,2DACA,GAGFF,EAAIG,OAAS,WAEX,IAAIC,EAAQrH,KAAKC,MAAMwF,KAAK6B,cAC5BnH,QAAQC,IAAIiH,GAEZlH,QAAQC,IAAIqF,KAAK6B,cAEjB,IAAMzN,EAAO,CACXmE,SAAU2D,EAAK5D,SAASC,SACxBtE,SAAU2N,EAAME,UAChB3O,MAAOA,EAAMA,MACb0D,QAAQ,GAGVqF,EAAKoE,WAAWlM,GAEhB8H,EAAK0C,QAAQxK,GAEbsG,QAAQC,IAAIuB,EAAKzF,OAEjB2K,EAAYpB,KAAK6B,eAEnBL,EAAIO,KAAKV,OCrRUvP,SACzBS,GAAMsO,KAAKtH,OAAOC,aAAac,QAAQ,aAgDxB9D,mBAlCf,WAAe,IAAAoD,EAC2BjH,mBAAS,SADpCkH,EAAAhH,OAAAC,EAAA,EAAAD,CAAA+G,EAAA,GACNoI,EADMnI,EAAA,GACQoI,EADRpI,EAAA,GAQb,IAAKtH,GAAMiM,YACT,OAAOhL,EAAAC,EAAAC,cAAA,sBAGT,GAAInB,GAAMiM,aAAejM,GAAM+F,SAC7B,OAAO9E,EAAAC,EAAAC,cAACwO,EAAD,CAAM3P,MAAOA,GAAO+E,SAV7B,WACE/E,GAAMkM,SACNwD,EAAgB,YAWlB,IAAMxG,EACa,UAAjBuG,EACExO,EAAAC,EAAAC,cAACgG,EAAD,CAAOnH,MAAOA,GAAOoH,QAASsI,IAE9BzO,EAAAC,EAAAC,cAACwO,EAAD,CAAM3P,MAAOA,KAGjB,OACEiB,EAAAC,EAAAC,cAAA,OAAK0B,GAAG,mBACN5B,EAAAC,EAAAC,cAAA,QAAM0B,GAAG,aACP5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAc8H,QCvCtB0G,QACW,cAA7B5I,OAAO6I,SAASC,UAEe,UAA7B9I,OAAO6I,SAASC,UAEhB9I,OAAO6I,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhP,EAAAC,EAAAC,cAAC+O,GAAD,MAASnO,SAASC,eAAe,SD2H3C,kBAAmBmO,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.cca8dbce.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport VideoIcon from \"@material-ui/icons/VideoCall\";\r\nimport {\r\n  Image,\r\n  Video,\r\n  Transformation,\r\n  CloudinaryContext\r\n} from \"cloudinary-react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nexport default function Game({ store }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  function handleExpandClick() {\r\n    setExpanded(!expanded);\r\n  }\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.processFile(file, level, text => {\r\n      handleExpandClick();\r\n    });\r\n  }\r\n\r\n  function onChange(item, isVisible) {\r\n    item.setVisibility(isVisible);\r\n    if (isVisible) {\r\n      document.getElementById(item.publicId).play();\r\n    } else {\r\n      document.getElementById(item.publicId).pause();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {/* {store.loggedIn.nextChallange.map((level, i) => ( */}\r\n      {store.levels.map((level, i) => (\r\n        <VisibilitySensor\r\n          key={level.publicId}\r\n          onChange={isVisible => onChange(level, isVisible)}\r\n        >\r\n          <Card key={level.level} className={classes.card}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                  {level.level}\r\n                </Avatar>\r\n              }\r\n              title={level.name}\r\n              subheader={level.category}\r\n            />\r\n\r\n            <CardContent>\r\n              <Video\r\n                id={level.publicId}\r\n                cloudName=\"deolievif\"\r\n                publicId={level.publicId}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                loop\r\n                muted\r\n                playsInline\r\n                preload=\"metadata\"\r\n                poster={level.poster}\r\n              />\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {level.details}\r\n              </Typography>\r\n            </CardContent>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n              <CardContent>\r\n                <div className=\"fileinputs\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"file\"\r\n                    onChange={e => processFile(e, level)}\r\n                  />\r\n                  <div className=\"fakefile\">\r\n                    <Button variant=\"outlined\">\r\n                      Ladda upp <VideoIcon />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Collapse>\r\n          </Card>\r\n        </VisibilitySensor>\r\n      ))}\r\n      {/* ))} */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Image, Video } from \"cloudinary-react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 345,\r\n    marginTop: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nfunction onChange(item, isVisible) {\r\n  item.setVisibility(isVisible);\r\n  if (isVisible) {\r\n    document.getElementById(item.publicId).play();\r\n  } else {\r\n    document.getElementById(item.publicId).pause();\r\n  }\r\n}\r\n\r\nfunction ItemList({ store }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"item-list\">\r\n      {store.items.map((item, i) => (\r\n        <VisibilitySensor\r\n          key={item.publicId}\r\n          onChange={isVisible => onChange(item, isVisible)}\r\n        >\r\n          <Card key={item.publicId} className={classes.card}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                  <Image\r\n                    cloudName=\"deolievif\"\r\n                    publicId={item.user.profileImage}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                  />\r\n                </Avatar>\r\n              }\r\n              action={item.isDone && <StarIcon />}\r\n              title={item.user.name}\r\n              subheader={item.level}\r\n            />\r\n            <CardContent>\r\n              <Video\r\n                id={item.publicId}\r\n                cloudName=\"deolievif\"\r\n                publicId={item.publicId}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                loop\r\n                muted\r\n                playsInline\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </VisibilitySensor>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(ItemList);\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport ItemList from \"./ItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport UserIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"#f5f5f5\"\r\n  }\r\n}));\r\n\r\nfunction Main({ store, onLogout }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  function processFile(e, level) {\r\n    var file = e.target.files[0];\r\n\r\n    store.uploadImage(file, text => {});\r\n  }\r\n\r\n  function logout() {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    onLogout();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab label=\"Flöde\" icon={<FavoriteIcon />} />\r\n          <Tab label=\"Utmaningar\" icon={<StarIcon />} />\r\n          <Tab label=\"Topplista\" icon={<StarIcon />} />\r\n          <Tab label={store.loggedIn.userName} icon={<UserIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {tabIndex === 0 && (\r\n        <TabContainer>\r\n          <ItemList store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 1 && (\r\n        <TabContainer>\r\n          <Game store={store} />\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 2 && (\r\n        <TabContainer>\r\n          <div className=\"profile\">Topplista</div>\r\n          <div className=\"highscore\">\r\n            <List className={classes.root}>\r\n              {store.users.map(user => (\r\n                <>\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <Image\r\n                          cloudName=\"deolievif\"\r\n                          publicId={user.profileImage}\r\n                          width=\"100%\"\r\n                          height=\"100%\"\r\n                        />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={user.name}\r\n                      secondary={user.highscore}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                </>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </TabContainer>\r\n      )}\r\n      {tabIndex === 3 && (\r\n        <TabContainer>\r\n          <div className=\"profile\">\r\n            {store.loggedIn.name}\r\n            <Image\r\n              cloudName=\"deolievif\"\r\n              publicId={store.loggedIn.profileImage}\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n            <div className=\"fileinputs\">\r\n              <input\r\n                type=\"file\"\r\n                className=\"file\"\r\n                onChange={e => processFile(e)}\r\n              />\r\n              <div className=\"fakefile\">\r\n                <Button variant=\"outlined\">\r\n                  Ladda upp <ImageIcon />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <Button variant=\"outlined\" onClick={logout}>\r\n              Logga ut\r\n            </Button>\r\n          </div>\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Main);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function Login({ store, onLogin }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useLocalStorage(\"loggedIn\", {\r\n    userName: undefined\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   console.log(window.localStorage.getItem(\"loggedIn\"));\r\n\r\n  //   if (!store.users.length) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (window.localStorage.getItem(\"loggedIn\")) {\r\n  //     if (store.login2(window.localStorage.getItem(\"loggedIn\"))) {\r\n  //       console.log(\"logged in\");\r\n  //       onLogin();\r\n  //     } else {\r\n  //       console.log(\":(\");\r\n  //     }\r\n  //   }\r\n  // });\r\n\r\n  function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  function onClick(e) {\r\n    e.preventDefault();\r\n    if (store.login(userName.toLowerCase(), password)) {\r\n      //setUserName(e.target.value);\r\n      setLoggedIn(store.loggedIn.id);\r\n      onLogin();\r\n    } else {\r\n      alert(\"fel användarnamn/lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Användarnamn{\" \"}\r\n        <input value={userName} onInput={e => setUserName(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        Lösenord{\" \"}\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onInput={e => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <Button variant=\"outlined\" onClick={e => onClick(e)}>\r\n        LOGIN\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { types } from \"mobx-state-tree\";\r\nconst Level = types\r\n  .model(\"Level\", {\r\n    level: types.integer,\r\n    details: types.string,\r\n    is_done: false,\r\n    name: types.string,\r\n    category: types.string,\r\n    publicId: types.string\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    markDone() {\r\n      self.is_done = true;\r\n    },\r\n    setPublicId(newPublicId) {\r\n      self.publicId = newPublicId;\r\n    },\r\n    setName(newName) {\r\n      self.name = newName;\r\n    },\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    status() {\r\n      return self.is_done ? \"Done\" : \"Not Done\";\r\n    },\r\n    poster() {\r\n      return { publicId: self.publicId + '.jpg', resourceType: \"video\" };\r\n    }\r\n  }));\r\nexport default Level;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst Item = types\r\n  .model(\"Item\", {\r\n    userName: types.string,\r\n    publicId: types.string,\r\n    level: types.integer,\r\n    isDone: types.maybeNull(types.boolean)\r\n  })\r\n  .volatile(self => ({\r\n    isVisible: false\r\n  }))\r\n  .actions(self => ({\r\n    setVisibility(isVisible) {\r\n      self.isVisible = isVisible;\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    get user() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore.users.find(x => x.userName === self.userName);\r\n    }\r\n  }));\r\nexport default Item;\r\n","import { types, getRoot } from \"mobx-state-tree\";\r\n\r\nconst User = types\r\n  .model(\"User\", {\r\n    id: types.string,\r\n    userName: types.string,\r\n    name: types.string,\r\n    password: types.string,\r\n    profileImage: types.string\r\n  })\r\n  .views(self => ({\r\n    get levelStore() {\r\n      const levelStore = getRoot(self);\r\n      return levelStore;\r\n    },\r\n    get items() {\r\n      return self.levelStore.items.filter(x => x.userName === self.userName);\r\n    },\r\n    get highscore() {\r\n      return self.items.length === 0 ? 0 : self.items.length;\r\n    },\r\n    get nextChallange() {\r\n      return self.levelStore.levels[self.items.length];\r\n    }\r\n  }))\r\n  .actions(self => ({\r\n    setProfileImage(newPublicId) {\r\n      self.profileImage = newPublicId;\r\n    }\r\n  }));\r\nexport default User;\r\n","import { types, flow, applySnapshot } from \"mobx-state-tree\";\r\nimport Level from \"./Level\";\r\nimport Item from \"./Item\";\r\nimport User from \"./User\";\r\n\r\nconst config = {\r\n  base: \"appC7N77wl4iVEXGD\",\r\n  table: \"Levels\",\r\n  view: \"Grid%20view\",\r\n  apiKey: \"keyHQ5GM7ktar7YtG\",\r\n  maxRecords: 20\r\n};\r\n\r\nconst insertLevel = new Request(\r\n  `https://api.airtable.com/v0/appC7N77wl4iVEXGD/Levels`,\r\n  {\r\n    method: \"post\",\r\n    body: JSON.stringify({\r\n      fields: {\r\n        level: 11,\r\n        name: \"Bell Taps\",\r\n        details:\r\n          \"Transfer ball from side to side in a “bell ringing” motion, using the inside of both feet\",\r\n        is_done: false,\r\n        publicId: \"xriaksiq3gipz0dupgny\",\r\n        category: \"Beginner\"\r\n      }\r\n    }),\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`,\r\n      \"Content-Type\": \"application/json\"\r\n    })\r\n  }\r\n);\r\n\r\nconst request = new Request(\r\n  `https://api.airtable.com/v0/${config.base}/${config.table}?maxRecords=${\r\n    config.maxRecords\r\n  }&view=${config.view}`,\r\n  {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`\r\n    })\r\n  }\r\n);\r\n\r\nconst itemsRequest = new Request(\r\n  `https://api.airtable.com/v0/${config.base}/Items?maxRecords=${\r\n    config.maxRecords\r\n  }&view=${config.view}`,\r\n  {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`\r\n    })\r\n  }\r\n);\r\n\r\nconst userRequest = new Request(\r\n  `https://api.airtable.com/v0/${config.base}/Users?maxRecords=${\r\n    config.maxRecords\r\n  }&view=${config.view}`,\r\n  {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: `Bearer ${config.apiKey}`\r\n    })\r\n  }\r\n);\r\n\r\nconst LevelStore = types\r\n  .model(\"LevelStore\", {\r\n    levels: types.array(Level),\r\n    items: types.array(Item),\r\n    users: types.array(User)\r\n  })\r\n  .views(self => ({\r\n    get test() {\r\n      return \"testing\";\r\n    },\r\n    get filteredLevels() {\r\n      const array = [];\r\n      array.push(self.levels[0]);\r\n      return array;\r\n    }\r\n  }))\r\n  .volatile(self => ({\r\n    loggedIn: null,\r\n    initzialize: false\r\n  }))\r\n  .actions(self => ({\r\n    logout() {\r\n      self.loggedIn = null;\r\n    },\r\n    login(userName, password) {\r\n      self.loggedIn = self.users.find(\r\n        x => x.userName === userName && x.password === password\r\n      );\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    login2(id) {\r\n      self.loggedIn = self.users.find(x => x.id === JSON.parse(id));\r\n\r\n      if (self.loggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    add(level) {\r\n      self.levels.push(level);\r\n    },\r\n    addItem(item) {\r\n      self.items.push(item);\r\n    },\r\n    async fetchAirtable() {\r\n      var resp = await fetch(request).catch(err => {\r\n        console.log(err);\r\n      });\r\n      if (resp.status >= 200 && resp.status < 300) {\r\n        var json = await resp.json();\r\n        return json.records;\r\n      }\r\n    },\r\n    async fetchItems() {\r\n      var resp = await fetch(itemsRequest).catch(err => {\r\n        console.log(err);\r\n      });\r\n      if (resp.status >= 200 && resp.status < 300) {\r\n        var json = await resp.json();\r\n        return json.records;\r\n      }\r\n    },\r\n    insertItem(item) {\r\n      fetch(\r\n        new Request(`https://api.airtable.com/v0/appC7N77wl4iVEXGD/Items`, {\r\n          method: \"post\",\r\n          body: JSON.stringify({\r\n            fields: item\r\n          }),\r\n          headers: new Headers({\r\n            Authorization: `Bearer ${config.apiKey}`,\r\n            \"Content-Type\": \"application/json\"\r\n          })\r\n        })\r\n      ).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    updateUser(user) {\r\n      const url = `https://api.airtable.com/v0/appC7N77wl4iVEXGD/Users/recPDEuzfAvPaJ5Jf`;\r\n      console.log(url);\r\n      fetch(\r\n        new Request(url, {\r\n          method: \"put\",\r\n          body: JSON.stringify({\r\n            fields: {\r\n              name: \"Gustav Karlsson\",\r\n              userName: \"gk\",\r\n              password: \"gk\",\r\n              profileImage: user.profileImage\r\n            }\r\n          }),\r\n          headers: new Headers({\r\n            Authorization: `Bearer ${config.apiKey}`,\r\n            \"Content-Type\": \"application/json\"\r\n          })\r\n        })\r\n      ).catch(err => {\r\n        alert(err);\r\n      });\r\n    },\r\n    async fetchUsers() {\r\n      var resp = await fetch(userRequest).catch(err => {\r\n        console.log(err);\r\n      });\r\n      if (resp.status >= 200 && resp.status < 300) {\r\n        var json = await resp.json();\r\n        return json.records;\r\n      }\r\n    },\r\n    init: flow(function* init(id) {\r\n      var levels = yield self.fetchAirtable();\r\n      var users = yield self.fetchUsers();\r\n      var items = yield self.fetchItems();\r\n\r\n      const data = {\r\n        users: [],\r\n        items: [],\r\n        levels: []\r\n      };\r\n\r\n      levels.forEach(elm => {\r\n        data.levels.push(elm.fields);\r\n      });\r\n\r\n      users.forEach(elm => {\r\n        elm.fields.id = elm.id;\r\n        data.users.push(elm.fields);\r\n      });\r\n\r\n      items.forEach(elm => {\r\n        data.items.push(elm.fields);\r\n      });\r\n\r\n      applySnapshot(self, data);\r\n\r\n      if (id) {\r\n        self.login2(id);\r\n      }\r\n\r\n      self.initzialize = true;\r\n    }),\r\n    uploadImage(file, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/image/upload\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n\r\n        var myObj = JSON.parse(this.responseText);\r\n        self.loggedIn.setProfileImage(myObj.public_id);\r\n        self.updateUser(self.loggedIn);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    },\r\n    processFile(file, level, onProcessed) {\r\n      var formdata = new FormData();\r\n\r\n      formdata.append(\"file\", file);\r\n      formdata.append(\"cloud_name\", \"deolievif\");\r\n      formdata.append(\"upload_preset\", \"kv0do7lj\");\r\n      formdata.append(\"resource_type\", \"raw\");\r\n      formdata.append(\"title\", self.loggedIn.userName);\r\n      //formdata.append(\"public_id\", level.level);\r\n      formdata.append(\"tags\", self.loggedIn.userName);\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        \"POST\",\r\n        \"https://api.cloudinary.com/v1_1/deolievif/video/upload/\",\r\n        true\r\n      );\r\n\r\n      xhr.onload = function() {\r\n        // do something to response\r\n        var myObj = JSON.parse(this.responseText);\r\n        console.log(myObj);\r\n        //level.setPublicId(myObj.public_id);\r\n        console.log(this.responseText);\r\n\r\n        const item = {\r\n          userName: self.loggedIn.userName,\r\n          publicId: myObj.public_id,\r\n          level: level.level,\r\n          isDone: false\r\n        };\r\n\r\n        self.insertItem(item);\r\n\r\n        self.addItem(item);\r\n\r\n        console.log(self.items);\r\n\r\n        onProcessed(this.responseText);\r\n      };\r\n      xhr.send(formdata);\r\n    }\r\n  }));\r\nexport default LevelStore;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\nimport LevelStore from \"./models/LevelStore\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst store = LevelStore.create();\r\nstore.init(window.localStorage.getItem(\"loggedIn\"));\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction App() {\r\n  const [menuSelected, setMenuSelected] = useState(\"Login\");\r\n\r\n  function onLogout() {\r\n    store.logout();\r\n    setMenuSelected(\"Login\");\r\n  }\r\n\r\n  if (!store.initzialize) {\r\n    return <div>loading</div>;\r\n  }\r\n\r\n  if (store.initzialize && store.loggedIn) {\r\n    return <Main store={store} onLogout={onLogout} />;\r\n  }\r\n\r\n  const login =\r\n    menuSelected === \"Login\" ? (\r\n      <Login store={store} onLogin={setMenuSelected} />\r\n    ) : (\r\n      <Main store={store} />\r\n    );\r\n\r\n  return (\r\n    <div id=\"outer-container\">\r\n      <main id=\"page-wrap\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">{login}</header>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}